new entry "Throw_Throw_CunningAction"
type "SpellData"
data "SpellType" "Throw"
using "Throw_Throw"
data "SpellRoll" ""
data "SpellSuccess" ""
data "DisplayName" "Throw: Cunning Action"
data "UseCosts" "BonusActionPoint:1"
data "SpellActionType" ""

new entry "Throw_QuickToss"
type "SpellData"
data "SpellType" "Throw"
using "Throw_Throw"
data "SpellProperties" "ApplyStatus(SELF,QUICK_TOSS_TECHNICAL,100,1)"
data "SpellSuccess" "TARGET:IF(HasActionResource('SuperiorityDie',1,0,false,context.Source)):DealDamage(ThrownWeapon + LevelMapValue(SuperiorityDie), ThrownWeaponDamageType);TARGET:IF(not HasActionResource('SuperiorityDie',1,0,false,context.Source) and not CharacterLevelGreaterThan(9)):DealDamage(ThrownWeapon + 1d8, ThrownWeaponDamageType);TARGET:IF(not HasActionResource('SuperiorityDie',1,0,false,context.Source) and CharacterLevelGreaterThan(9) and not CharacterLevelGreaterThan(17)):DealDamage(ThrownWeapon + 1d10, ThrownWeaponDamageType);TARGET:IF(not HasActionResource('SuperiorityDie',1,0,false,context.Source) CharacterLevelGreaterThan(17)):DealDamage(ThrownWeapon + 1d12, ThrownWeaponDamageType)"
data "ThrowableTargetConditions" "CanThrowWeight() and not Grounded() and not IsItemDisabled() and not HasAttribute('InventoryBound') and (IsMovable() or Character() or Dead()) and CanMove(context.Target, context.Source, false) and HasWeaponProperty(WeaponProperties.Thrown,context.HitDescription.ThrownObject)"
data "DisplayName" "Quick Toss"
data "Description" "Spend one superiority die and throw a weapon with the thrown property, dealing an additional [1] damage on a hit."
data "DescriptionParams" "LevelMapValue(SuperiorityDie)"
data "UseCosts" "BonusActionPoint:1;SuperiorityDie:1"
data "SpellActionType" ""

new entry "Throw_Throw_Dagger"
type "SpellData"
data "SpellType" "Throw"
using "Throw_Throw"
data "SpellRoll" "Attack(AttackType.MeleeWeaponAttack)"
data "SpellSuccess" "TARGET:DealDamage(ThrownWeapon, ThrownWeaponDamageType);ApplyStatus(SNEAK_ATTACK_TARGET,100,1)"
data "TargetConditions" "not Self() and not (not Player(context.Source) and Item()) and ((HasAllyWithinRange('SG_Incapacitated',3) or HasAdvantage()) and not HasDisadvantage())"
data "ThrowableTargetConditions" "CanThrowWeight() and not Grounded() and not IsItemDisabled() and not HasAttribute('InventoryBound') and (IsMovable() or Character() or Dead()) and CanMove(context.Target, context.Source, false) and HasWeaponProperty(WeaponProperties.Melee,context.HitDescription.ThrownObject) and HasWeaponProperty(WeaponProperties.Light,context.HitDescription.ThrownObject) and HasWeaponProperty(WeaponProperties.Finesse,context.HitDescription.ThrownObject) and HasWeaponProperty(WeaponProperties.Thrown,context.HitDescription.ThrownObject)"
data "DisplayName" "Throw: Sneak Attack"
data "Description" "Throw a dagger as a Sneak Attack."
data "UseCosts" "ActionPoint:1"
data "SpellActionType" ""

new entry "Projectile_SneakAttack_Explosion"
type "SpellData"
data "SpellType" "Projectile"
using "Projectile_SneakAttack"
data "Cooldown" ""
data "SpellProperties" "IF(ConditionResult(context.Source.Level < 17)):DealDamage(LevelMapValue(SneakAttack), Piercing);IF(ConditionResult(context.Source.Level > 16) and ConditionResult(context.Source.Level < 19)):DealDamage(9d10, Piercing);IF(ConditionResult(context.Source.Level > 18)):DealDamage(10d10, Piercing);UseActionResource(SELF,SneakAttack,1,0);RemoveStatus(SNEAK_ATTACK_TARGET)"
data "ExplodeRadius" "1"
data "SpellRoll" ""
data "SpellSuccess" ""
data "TargetConditions" "Character() and HasStatus('SNEAK_ATTACK_TARGET')"
data "DisplayName" "Sneak Attack"