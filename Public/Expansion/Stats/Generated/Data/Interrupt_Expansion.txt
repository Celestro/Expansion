new entry "Interrupt_MagicalInspiration_Damage"
type "InterruptData"
data "DisplayName" "h262733fdgd222g4ac6gb4fcg095778bdbcc5;1"
data "Description" "he7903471g9c92g494ag8cd1gb618846b69bc;1"
data "DescriptionParams" "1d6"
data "Icon" "PassiveFeature_MagicalInspiration_Damage"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "not Dead(context.Observer) and Character() and Self(context.Source, context.Observer) and HasFunctor(StatsFunctorType.DealDamage) and not IsKillingBlow() and IsSpell()"
data "Properties" "IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Fire)):DealDamage(1d6, Fire,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Cold)):DealDamage(1d6, Cold,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Lightning)):DealDamage(1d6, Lightning,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Acid)):DealDamage(1d6, Acid,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Poison)):DealDamage(1d6, Poison,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Force)):DealDamage(1d6, Force,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Necrotic)):DealDamage(1d6, Necrotic,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Radiant)):DealDamage(1d6, Radiant,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Thunder)):DealDamage(1d6, Thunder,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Psychic)):DealDamage(1d6, Psychic,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Bludgeoning)):DealDamage(1d6, Bludgeoning,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Slashing)):DealDamage(1d6, Slashing,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Piercing)):DealDamage(1d6, Piercing,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Fire)):DealDamage(1d6/2, Fire,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Cold)):DealDamage(1d6/2, Cold,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Lightning)):DealDamage(1d6/2, Lightning,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Acid)):DealDamage(1d6/2, Acid,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Poison)):DealDamage(1d6/2, Poison,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Force)):DealDamage(1d6/2, Force,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Necrotic)):DealDamage(1d6/2, Necrotic,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Radiant)):DealDamage(1d6/2, Radiant,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Thunder)):DealDamage(1d6/2, Thunder,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Psychic)):DealDamage(1d6/2, Psychic,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Bludgeoning)):DealDamage(1d6/2, Bludgeoning,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Slashing)):DealDamage(1d6/2, Slashing,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Piercing)):DealDamage(1d6/2, Piercing,Magical,,0,,true,true);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_DAMAGE,100,0);RemoveStatus(OBSERVER_OBSERVER,MAGICAL_INSPIRATION)"
data "Cost" "BardicInspiration:1"
data "Stack" "BardicInspiration"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasStatus('SG_Polymorph') or Tagged('MINDFLAYER') or HasStatus('SG_Disguise')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"

new entry "Interrupt_MagicalInspiration_Damage_D8"
type "InterruptData"
using "Interrupt_MagicalInspiration_Damage"
data "DescriptionParams" "1d8"
data "Properties" "IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Fire)):DealDamage(1d8, Fire,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Cold)):DealDamage(1d8, Cold,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Lightning)):DealDamage(1d8, Lightning,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Acid)):DealDamage(1d8, Acid,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Poison)):DealDamage(1d8, Poison,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Force)):DealDamage(1d8, Force,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Necrotic)):DealDamage(1d8, Necrotic,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Radiant)):DealDamage(1d8, Radiant,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Thunder)):DealDamage(1d8, Thunder,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Psychic)):DealDamage(1d8, Psychic,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Bludgeoning)):DealDamage(1d8, Bludgeoning,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Slashing)):DealDamage(1d8, Slashing,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Piercing)):DealDamage(1d8, Piercing,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Fire)):DealDamage(1d8/2, Fire,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Cold)):DealDamage(1d8/2, Cold,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Lightning)):DealDamage(1d8/2, Lightning,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Acid)):DealDamage(1d8/2, Acid,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Poison)):DealDamage(1d8/2, Poison,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Force)):DealDamage(1d8/2, Force,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Necrotic)):DealDamage(1d8/2, Necrotic,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Radiant)):DealDamage(1d8/2, Radiant,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Thunder)):DealDamage(1d8/2, Thunder,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Psychic)):DealDamage(1d8/2, Psychic,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Bludgeoning)):DealDamage(1d8/2, Bludgeoning,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Slashing)):DealDamage(1d8/2, Slashing,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Piercing)):DealDamage(1d8/2, Piercing,Magical,,0,,true,true);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D8);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D8);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_DAMAGE,100,0);RemoveStatus(OBSERVER_OBSERVER,MAGICAL_INSPIRATION_D8)"

new entry "Interrupt_MagicalInspiration_Damage_D10"
type "InterruptData"
using "Interrupt_MagicalInspiration_Damage"
data "DescriptionParams" "1d10"
data "Properties" "IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Fire)):DealDamage(1d10, Fire,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Cold)):DealDamage(1d10, Cold,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Lightning)):DealDamage(1d10, Lightning,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Acid)):DealDamage(1d10, Acid,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Poison)):DealDamage(1d10, Poison,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Force)):DealDamage(1d10, Force,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Necrotic)):DealDamage(1d10, Necrotic,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Radiant)):DealDamage(1d10, Radiant,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Thunder)):DealDamage(1d10, Thunder,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Psychic)):DealDamage(1d10, Psychic,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Bludgeoning)):DealDamage(1d10, Bludgeoning,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Slashing)):DealDamage(1d10, Slashing,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Piercing)):DealDamage(1d10, Piercing,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Fire)):DealDamage(1d10/2, Fire,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Cold)):DealDamage(1d10/2, Cold,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Lightning)):DealDamage(1d10/2, Lightning,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Acid)):DealDamage(1d10/2, Acid,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Poison)):DealDamage(1d10/2, Poison,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Force)):DealDamage(1d10/2, Force,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Necrotic)):DealDamage(1d10/2, Necrotic,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Radiant)):DealDamage(1d10/2, Radiant,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Thunder)):DealDamage(1d10/2, Thunder,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Psychic)):DealDamage(1d10/2, Psychic,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Bludgeoning)):DealDamage(1d10/2, Bludgeoning,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Slashing)):DealDamage(1d10/2, Slashing,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Piercing)):DealDamage(1d10/2, Piercing,Magical,,0,,true,true);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D10);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D10);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_DAMAGE,100,0);RemoveStatus(OBSERVER_OBSERVER,MAGICAL_INSPIRATION_D10)"

new entry "Interrupt_MagicalInspiration_Damage_D12"
type "InterruptData"
using "Interrupt_MagicalInspiration_Damage"
data "DescriptionParams" "1d12"
data "Properties" "IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Fire)):DealDamage(1d12, Fire,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Cold)):DealDamage(1d12, Cold,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Lightning)):DealDamage(1d12, Lightning,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Acid)):DealDamage(1d12, Acid,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Poison)):DealDamage(1d12, Poison,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Force)):DealDamage(1d12, Force,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Necrotic)):DealDamage(1d12, Necrotic,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Radiant)):DealDamage(1d12, Radiant,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Thunder)):DealDamage(1d12, Thunder,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Psychic)):DealDamage(1d12, Psychic,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Bludgeoning)):DealDamage(1d12, Bludgeoning,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Slashing)):DealDamage(1d12, Slashing,Magical,,0,,true,true);IF(not HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Piercing)):DealDamage(1d12, Piercing,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Fire)):DealDamage(1d12/2, Fire,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Cold)):DealDamage(1d12/2, Cold,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Lightning)):DealDamage(1d12/2, Lightning,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Acid)):DealDamage(1d12/2, Acid,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Poison)):DealDamage(1d12/2, Poison,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Force)):DealDamage(1d12/2, Force,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Necrotic)):DealDamage(1d12/2, Necrotic,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Radiant)):DealDamage(1d12/2, Radiant,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Thunder)):DealDamage(1d12/2, Thunder,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Psychic)):DealDamage(1d12/2, Psychic,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Bludgeoning)):DealDamage(1d12/2, Bludgeoning,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Slashing)):DealDamage(1d12/2, Slashing,Magical,,0,,true,true);IF(HasDamageEffectFlag(DamageFlags.SavingThrow) and SpellDamageTypeIs(DamageType.Piercing)):DealDamage(1d12/2, Piercing,Magical,,0,,true,true);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D12);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D12);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_DAMAGE,100,0);RemoveStatus(OBSERVER_OBSERVER,MAGICAL_INSPIRATION_D12)"

new entry "Interrupt_MagicalInspiration_Healing"
type "InterruptData"
using "Interrupt_MagicalInspiration_Damage"
data "DisplayName" "h792002a4g391dg4a96ga926g3ef5ba03a4ac;1"
data "Description" "h0c370ca2ge440g4481ga510g18f9845da391;1"
data "Icon" "PassiveFeature_MagicalInspiration_Healing"
data "Conditions" "not Dead(context.Observer) and Character() and Self(context.Source, context.Observer) and HasFunctor(StatsFunctorType.RegainHitPoints) and IsSpell()"
data "Properties" "ApplyStatus(OBSERVER_TARGET,MAGICAL_INSPIRATION_HEALING,100,0);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_SAVINGTHROW,100,0);RemoveStatus(OBSERVER_OBSERVER,MAGICAL_INSPIRATION)"

new entry "Interrupt_MagicalInspiration_Healing_D8"
type "InterruptData"
using "Interrupt_MagicalInspiration_Healing"
data "DescriptionParams" "1d8"
data "Properties" "ApplyStatus(OBSERVER_TARGET,MAGICAL_INSPIRATION_HEALING_D8,100,0);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D8);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D8);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_SAVINGTHROW,100,0);RemoveStatus(OBSERVER_OBSERVER,MAGICAL_INSPIRATION_D8)"

new entry "Interrupt_MagicalInspiration_Healing_D10"
type "InterruptData"
using "Interrupt_MagicalInspiration_Healing"
data "DescriptionParams" "1d10"
data "Properties" "ApplyStatus(OBSERVER_TARGET,MAGICAL_INSPIRATION_HEALING_D10,100,0);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D10);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D10);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_SAVINGTHROW,100,0);RemoveStatus(OBSERVER_OBSERVER,MAGICAL_INSPIRATION_D10)"

new entry "Interrupt_MagicalInspiration_Healing_D12"
type "InterruptData"
using "Interrupt_MagicalInspiration_Healing"
data "DescriptionParams" "1d12"
data "Properties" "ApplyStatus(OBSERVER_TARGET,MAGICAL_INSPIRATION_HEALING_D12,100,0);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D12);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D12);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_SAVINGTHROW,100,0);RemoveStatus(OBSERVER_OBSERVER,MAGICAL_INSPIRATION_D12)"

new entry "Interrupt_BlessedStrikes"
type "InterruptData"
data "DisplayName" "hbb1fd0f1g2054g4753gb108g483fe1a6fd81;1"
data "Description" "h0277f46cg7ef8g4262gbb31gc06a1e5c4e85;1"
data "DescriptionParams" "1d8"
data "Icon" "PassiveFeature_BlessedStrikes"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "not Dead(context.Observer) and Character() and Self(context.Source, context.Observer) and HasFunctor(StatsFunctorType.DealDamage) and not IsKillingBlow() and (IsCantrip() or IsWeaponAttack()) and not SpellId('Target_BlessedStrikes') and not SpellId('Projectile_BlessedStrikes') and IsHit() and not AnyEntityIsItem()"
data "Properties" "DealDamage(1d8, Radiant,Magical,,0,,true,true);ApplyStatus(INTERRUPT_SMITE_DIVINE_VFX,100,0)"
data "Cooldown" "OncePerTurn"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasStatus('SG_Polymorph') or Tagged('MINDFLAYER') or HasStatus('SG_Disguise')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"

new entry "Interrupt_FocusedAim"
type "InterruptData"
data "DisplayName" "hfdc4b496gfd5ag4b60gb369g63f980b4a0c2;1"
data "Description" "hfe43f72ega3edg4a06gb98bgd84f9d43eded;1"
data "DescriptionParams" "2"
data "Icon" "PassiveFeature_FocusedAim"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "not Dead(context.Observer) and HasInterruptedAttack() and Self(context.Observer,context.Source) and IsRerollInterruptInteresting(context.Source)"
data "Properties" "AdjustRoll(OBSERVER_OBSERVER,2)"
data "Cost" "KiPoint:1"
data "Stack" "FocusedKi"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasStatus('SG_Polymorph') or Tagged('MINDFLAYER') or HasStatus('SG_Disguise')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"

new entry "Interrupt_FocusedAim_2"
type "InterruptData"
using "Interrupt_FocusedAim"
data "DescriptionParams" "4"
data "DisplayName" "ha45815f2g287bg49d3ga9e2gbec4d93452f9;1"
data "Properties" "AdjustRoll(OBSERVER_OBSERVER,4)"
data "Cost" "KiPoint:2"

new entry "Interrupt_FocusedAim_3"
type "InterruptData"
using "Interrupt_FocusedAim"
data "DisplayName" "h3f91e912g2f00g4a00gb9dcg58c1359f900e;1"
data "DescriptionParams" "6"
data "Properties" "AdjustRoll(OBSERVER_OBSERVER,6)"
data "Cost" "KiPoint:3"

new entry "Interrupt_FavoredFoe"
type "InterruptData"
data "DisplayName" "h8fd95bb3g31e8g41a2ga5c4g7715586f6dde;1"
data "Description" "hd1a21dbbg37eeg44c5gbdedga7196df3c2e3;1"
data "DescriptionParams" "LevelMapValue(FavoredFoe)"
data "Icon" "PassiveFeature_FavoredEnemy_FavoredFoe"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAttack() and Character() and Self(context.Source,context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and not (HasStatus('FAVORED_FOE_TECHNICAL',context.Source) or HasStatus('FAVORED_FOE_TECHNICAL',context.Observer)) and not (IsConcentrating(context.Source) or IsConcentrating(context.Observer)) and not AnyEntityIsItem()"
data "Properties" "IF(IsDamageTypeAcid() and not EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Acid,,,0,,true,true);IF(IsDamageTypeCold() and not EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Cold,,,0,,true,true);IF(IsDamageTypeFire() and not EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Fire,,,0,,true,true);IF(IsDamageTypeLightning() and not EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Lightning,,,0,,true,true);IF(IsDamageTypeThunder() and not EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Thunder,,,0,,true,true);IF(IsDamageTypeRadiant() and not EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Radiant,,,0,,true,true);IF(IsDamageTypePoison() and not EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Poison,,,0,,true,true);IF(IsDamageTypePsychic() and not EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Psychic,,,0,,true,true);IF(IsDamageTypeForce() and not EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Force,,,0,,true,true);IF(IsDamageTypeSlashing() and not EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Slashing,,,0,,true,true);IF(IsDamageTypeBludgeoning() and not EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Bludgeoning,,,0,,true,true);IF(IsDamageTypePiercing() and not EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Piercing,,,0,,true,true);IF(IsDamageTypeNecrotic() and not EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Necrotic,,,0,,true,true);IF(IsDamageTypeAcid() and EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Acid,Magical,,0,,true,true);IF(IsDamageTypeCold() and EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Cold,Magical,,0,,true,true);IF(IsDamageTypeFire() and EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Fire,Magical,,0,,true,true);IF(IsDamageTypeLightning() and EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Lightning,Magical,,0,,true,true);IF(IsDamageTypeThunder() and EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Thunder,Magical,,0,,true,true);IF(IsDamageTypeRadiant() and EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Radiant,Magical,,0,,true,true);IF(IsDamageTypePoison() and EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Poison,Magical,,0,,true,true);IF(IsDamageTypePsychic() and EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Psychic,Magical,,0,,true,true);IF(IsDamageTypeForce() and EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Force,Magical,,0,,true,true);IF(IsDamageTypeSlashing() and EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Slashing,Magical,,0,,true,true);IF(IsDamageTypeBludgeoning() and EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Bludgeoning,Magical,,0,,true,true);IF(IsDamageTypePiercing() and EXP_IsMagical()):DealDamage(LevelMapValue(FavoredFoe),Piercing,Magical,,0,,true,true);IF(IsDamageTypeNecrotic()):DealDamage(LevelMapValue(FavoredFoe),Necrotic,Magical,,0,,true,true);ApplyStatus(OBSERVER_TARGET,FAVORED_FOE_SPELL,100,0)"
data "Cooldown" "OncePerTurn"
data "Cost" "FavoredFoePoint:1"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasStatus('SG_Polymorph') or Tagged('MINDFLAYER') or HasStatus('SG_Disguise') or IsConcentrating() or HasStatus('FAVORED_FOE_TECHNICAL')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"

new entry "Interrupt_FavoredFoe_2"
type "InterruptData"
using "Interrupt_FavoredFoe"
data "DescriptionParams" "1d8"
data "Properties" "IF(IsDamageTypeAcid() and not EXP_IsMagical()):DealDamage(1d8,Acid,,,0,,true,true);IF(IsDamageTypeCold() and not EXP_IsMagical()):DealDamage(1d8,Cold,,,0,,true,true);IF(IsDamageTypeFire() and not EXP_IsMagical()):DealDamage(1d8,Fire,,,0,,true,true);IF(IsDamageTypeLightning() and not EXP_IsMagical()):DealDamage(1d8,Lightning,,,0,,true,true);IF(IsDamageTypeThunder() and not EXP_IsMagical()):DealDamage(1d8,Thunder,,,0,,true,true);IF(IsDamageTypeRadiant() and not EXP_IsMagical()):DealDamage(1d8,Radiant,,,0,,true,true);IF(IsDamageTypePoison() and not EXP_IsMagical()):DealDamage(1d8,Poison,,,0,,true,true);IF(IsDamageTypePsychic() and not EXP_IsMagical()):DealDamage(1d8,Psychic,,,0,,true,true);IF(IsDamageTypeForce() and not EXP_IsMagical()):DealDamage(1d8,Force,,,0,,true,true);IF(IsDamageTypeSlashing() and not EXP_IsMagical()):DealDamage(1d8,Slashing,,,0,,true,true);IF(IsDamageTypeBludgeoning() and not EXP_IsMagical()):DealDamage(1d8,Bludgeoning,,,0,,true,true);IF(IsDamageTypePiercing() and not EXP_IsMagical()):DealDamage(1d8,Piercing,,,0,,true,true);IF(IsDamageTypeNecrotic() and not EXP_IsMagical()):DealDamage(1d8,Necrotic,,,0,,true,true);IF(IsDamageTypeAcid() and EXP_IsMagical()):DealDamage(1d8,Acid,Magical,,0,,true,true);IF(IsDamageTypeCold() and EXP_IsMagical()):DealDamage(1d8,Cold,Magical,,0,,true,true);IF(IsDamageTypeFire() and EXP_IsMagical()):DealDamage(1d8,Fire,Magical,,0,,true,true);IF(IsDamageTypeLightning() and EXP_IsMagical()):DealDamage(1d8,Lightning,Magical,,0,,true,true);IF(IsDamageTypeThunder() and EXP_IsMagical()):DealDamage(1d8,Thunder,Magical,,0,,true,true);IF(IsDamageTypeRadiant() and EXP_IsMagical()):DealDamage(1d8,Radiant,Magical,,0,,true,true);IF(IsDamageTypePoison() and EXP_IsMagical()):DealDamage(1d8,Poison,Magical,,0,,true,true);IF(IsDamageTypePsychic() and EXP_IsMagical()):DealDamage(1d8,Psychic,Magical,,0,,true,true);IF(IsDamageTypeForce() and EXP_IsMagical()):DealDamage(1d8,Force,Magical,,0,,true,true);IF(IsDamageTypeSlashing() and EXP_IsMagical()):DealDamage(1d8,Slashing,Magical,,0,,true,true);IF(IsDamageTypeBludgeoning() and EXP_IsMagical()):DealDamage(1d8,Bludgeoning,Magical,,0,,true,true);IF(IsDamageTypePiercing() and EXP_IsMagical()):DealDamage(1d8,Piercing,Magical,,0,,true,true);IF(IsDamageTypeNecrotic()):DealDamage(1d8,Necrotic,Magical,,0,,true,true);ApplyStatus(OBSERVER_TARGET,FAVORED_FOE_SPELL,100,0)"

new entry "Interrupt_Retaliation"
type "InterruptData"
data "DisplayName" "h97c1fa0eg8898g41e6g9813g938397e7f05f;1"
data "Description" "h0c9fac88g374dg4be4g8ff0g38da1562349d;1"
data "DescriptionParams" "Distance(1.5)"
data "Icon" "PassiveFeature_Retaliation"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and HasFunctor(StatsFunctorType.DealDamage) and not WieldingWeapon('Ammunition', false, false, context.Observer) and Self(context.Target,context.Observer) and not AnyEntityIsItem() and not DistanceToEntityGreaterThan(2, context.ObserverPosition, context.Source)"
data "Properties" "UseAttack(SWAP)"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasAnyStatus({'SG_Polymorph','SG_Blinded'}) or Tagged('MINDFLAYER') or HasStatus('SG_Disguise')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"
data "InterruptFlags" "InterruptWhileInvisible"

new entry "Interrupt_DiamondSoul"
type "InterruptData"
data "DisplayName" "h8374bdfbg27b6g4a36g8a09g509542010692;1"
data "Description" "hed0a51b0g8311g4f2cgbd98g0687fc74dee2;2"
data "Icon" "PassiveFeature_DiamondSoul"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "not Dead(context.Observer) and HasInterruptedSavingThrow() and Self(context.Observer,context.Target) and not AnyEntityIsItem() and IsRerollInterruptInteresting()"
data "Properties" "SetReroll(19,true)"
data "Cost" "KiPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "(not HasStatus('SG_Polymorph') or Tagged('MINDFLAYER'))"
data "EnableContext" "OnActionResourcesChanged"
data "InterruptFlags" "InterruptWhileInvisible"

new entry "Interrupt_SneakAttack_13"
type "InterruptData"
using "Interrupt_SneakAttack"
data "Properties" "IF(IsMeleeAttack()):DealDamage(7d6, MainMeleeWeaponDamageType);IF(IsRangedAttack()):DealDamage(7d6, MainRangedWeaponDamageType);IF(HasPassive('MAG_ForcefulSneakAttack_Passive', context.Source)):DealDamage(1d4, Force,Magical)"
data "Cost" "SneakAttack_Charge:1"
data "Stack" "SneakAttack"
data "Cooldown" "OncePerTurn"
data "InterruptDefaultValue" "Enabled"
data "EnableCondition" "HasActionResource('SneakAttack_Charge',1,0,false,false,context.Source) and (WieldingFinesseWeaponInSpecificHand(context.Source, false) or WieldingFinesseWeaponInSpecificHand(context.Source, true) or WieldingWeapon('Ammunition', false, true, context.Source) or SpellTypeIs(SpellType.Throw)) and (not HasStatus('SG_Polymorph') or Tagged('MINDFLAYER') or HasStatus('SG_Disguise'))"
data "EnableContext" "OnActionResourcesChanged;OnEquip"

new entry "Interrupt_SneakAttack_Critical_13"
type "InterruptData"
using "Interrupt_SneakAttack_Critical"
data "Properties" "IF(IsMeleeAttack()):DealDamage(7d6, MainMeleeWeaponDamageType);IF(IsRangedAttack()):DealDamage(7d6, MainRangedWeaponDamageType);IF(HasPassive('MAG_ForcefulSneakAttack_Passive', context.Source)):DealDamage(1d4, Force,Magical)"

new entry "Interrupt_HurlThroughHell"
type "InterruptData"
data "DisplayName" "h5f3a69d6g8de4g4375g8703gec6bd9277df2;1"
data "Description" "h4f936f97ga43ag4198gb445g5f5a008255f2;1"
data "ExtraDescription" "h384f96aag6b7ag40f7gae1ag49db98d6b7cf;1"
data "ExtraDescriptionParams" "DealDamage(10d10,Psychic)"
data "Icon" "PassiveFeature_HurlThroughHell"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and IsAttack() and Self(context.Source,context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and not IsKillingBlow() and not AnyEntityIsItem()"
data "Properties" "IF(not Tagged('FIEND')):ApplyStatus(HURL_THROUGH_HELL,100,2);IF(Tagged('FIEND')):ApplyStatus(HURL_THROUGH_HELL_FIEND,100,2);ApplyStatus(HURL_THROUGH_HELL_VFX,100,0)"
data "Cost" "Interrupt_HurlThroughHell:1"
data "EnableCondition" "HasActionResource('Interrupt_HurlThroughHell', 1, 0, false, false, context.Source) and not HasStatus('SG_Polymorph') or Tagged('MINDFLAYER')  or HasStatus('SG_Disguise')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"
data "InterruptDefaultValue" "Enabled;Ask"

new entry "Interrupt_Overchannel"
type "InterruptData"
data "DisplayName" "he1839990gf540g4c4egbab6g02a55fe3a296;1"
data "Description" "h62fc1db1ga036g4b5fg990cg1e18aca87fe4;1"
data "Icon" "PassiveFeature_Overchannel"
data "InterruptContext" "OnSpellCast"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "Self(context.Source,context.Observer) and HasFunctor(StatsFunctorType.DealDamage) and ConditionResult(context.HitDescription.SpellPowerLevel > 0) and ConditionResult(context.HitDescription.SpellPowerLevel < 6) and not AnyEntityIsItem()"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,OVERCHANNEL,100,1)"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasStatus('SG_Polymorph') or Tagged('MINDFLAYER') or HasStatus('SG_Disguise')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"

new entry "Interrupt_BardicInspiration_Attack_d12"
type "InterruptData"
using "Interrupt_BardicInspiration_Attack"
data "DescriptionParams" "1d12"
data "Conditions" "not Dead(context.Observer) and HasInterruptedAttack() and Self(context.Observer,context.Source) and not AnyEntityIsItem() and IsFlatValueInterruptInteresting(12, context.Source)"

new entry "Interrupt_BardicInspiration_SavingThrow_d12"
type "InterruptData"
using "Interrupt_BardicInspiration_SavingThrow"
data "DescriptionParams" "1d12"
data "Conditions" "not Dead(context.Observer) and HasInterruptedSavingThrow() and Self(context.Observer,context.Target) and not AnyEntityIsItem() and IsFlatValueInterruptInteresting(12)"

new entry "Interrupt_CombatInspiration_Attack_d12"
type "InterruptData"
using "Interrupt_CombatInspiration_Attack"
data "DescriptionParams" "1d12"
data "Conditions" "not Dead(context.Observer) and HasInterruptedAttack() and Self(context.Observer,context.Source) and not AnyEntityIsItem() and IsFlatValueInterruptInteresting(12, context.Source)"

new entry "Interrupt_CombatInspiration_SavingThrow_ArmorClass_d12"
type "InterruptData"
using "Interrupt_CombatInspiration_SavingThrow_ArmorClass"
data "DescriptionParams" "1d12"
data "Conditions" "not Dead(context.Observer) and ((HasInterruptedAttack() and IsFlatValueInterruptInteresting(12, context.Source)) or (HasInterruptedSavingThrow() and IsFlatValueInterruptInteresting(12))) and Self(context.Observer,context.Target) and not AnyEntityIsItem()"

new entry "Interrupt_SoulOfVengeance"
type "InterruptData"
data "DisplayName" "h7f781143ge8ceg44f1g9ca9g017bc7075d84;1"
data "Description" "hce57670fgc111g49a5g835bgbacf5be1716f;1"
data "Icon" "PassiveFeature_SoulOfVengeance"
data "InterruptContext" "OnSpellCast"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and HasStringInSpellRoll('Attack') and not WieldingWeapon('Ammunition', false, false, context.Observer) and not AnyEntityIsItem() and not DistanceToEntityGreaterThan(2, context.ObserverPosition, context.Source) and HasStatus('VOW_OF_ENMITY',context.Source,context.Observer)"
data "Properties" "UseAttack(SWAP)"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasAnyStatus({'SG_Polymorph','SG_Blinded'}) or Tagged('MINDFLAYER') or HasStatus('SG_Disguise')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"
data "InterruptFlags" "InterruptWhileInvisible"

new entry "Interrupt_SpellThief"
type "InterruptData"
data "DisplayName" "h5b525335g4f8cg4531gbd35g7c96fd83c135;1"
data "Description" "h3e5232dfgb6a3g48e4gb0e7g5639831bb9cd;1"
data "Icon" "PassiveFeature_SpellThief"
data "InterruptContext" "OnSpellCast"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "not HasSpellCastBlocked(context.Observer) and IsAbleToReact(context.Observer) and not Self(context.Source, context.Observer) and Enemy(context.Source, context.Observer) and IsSpell() and not Uninterruptible() and not HasStringInSpellRoll('WeaponAttack') and not AnyEntityIsItem() and not SpellId('Shout_END_Gale_ActivateNethereseOrb') and CounterspellCheck(context.Observer, context.Source) and HasStatus('INTELLIGENCE_SPELLCASTING',context.Source)"
data "Roll" "not SavingThrow(Ability.Intelligence, SourceSpellDC(10,context.Observer,Ability.Intelligence),false,false,context.Source)"
data "Success" "IF(SpellPowerLevelEqualOrLessThan(4) and SpellPowerLevelEqualOrLessThan(4) and not SpellPowerLevelEqualTo(0)):ApplyStatus(OBSERVER_SOURCE,SPELL_THIEF,100,0);Counterspell();UseSpell(OBSERVER_SOURCE,Target_SpellThief,true,true,true)"
data "Failure" "UseSpell(OBSERVER_SOURCE,Target_SpellThief_Failure,true,true,true)"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_SpellThief_Wisdom"
type "InterruptData"
using "Interrupt_SpellThief"
data "DisplayName" "hb8628bd8g1d32g4468g9285g6f3f8159993f;1"
data "Description" "h2d97f956g6b08g43c3g8036g6ba312e8ce60;1"
data "Conditions" "not HasSpellCastBlocked(context.Observer) and IsAbleToReact(context.Observer) and not Self(context.Source, context.Observer) and Enemy(context.Source, context.Observer) and IsSpell() and not Uninterruptible() and not HasStringInSpellRoll('WeaponAttack') and not AnyEntityIsItem() and not SpellId('Shout_END_Gale_ActivateNethereseOrb') and CounterspellCheck(context.Observer, context.Source) and HasStatus('WISDOM_SPELLCASTING',context.Source)"
data "Roll" "not SavingThrow(Ability.Wisdom, SourceSpellDC(10,context.Observer,Ability.Intelligence),false,false,context.Source)"

new entry "Interrupt_SpellThief_Charisma"
type "InterruptData"
using "Interrupt_SpellThief"
data "DisplayName" "hb7016e8fgd029g4158g8788g6922366194e0;1"
data "Description" "h2b835019gcee6g4f46gb4beg737dfa07da46;1"
data "Conditions" "not HasSpellCastBlocked(context.Observer) and IsAbleToReact(context.Observer) and not Self(context.Source, context.Observer) and Enemy(context.Source, context.Observer) and IsSpell() and not Uninterruptible() and not HasStringInSpellRoll('WeaponAttack') and not AnyEntityIsItem() and not SpellId('Shout_END_Gale_ActivateNethereseOrb') and CounterspellCheck(context.Observer, context.Source) and HasStatus('CHARISMA_SPELLCASTING',context.Source)"
data "Roll" "not SavingThrow(Ability.Charisma, SourceSpellDC(10,context.Observer,Ability.Intelligence),false,false,context.Source)"

new entry "Interrupt_SongOfDefense"
type "InterruptData"
data "DisplayName" "b20e04c9-647b-48ab-99b6-5fa0fbd957ea;1"
data "Description" "8d39dadd-360e-4469-a642-e8ae8973abd0;1"
data "DescriptionParams" "1;5"
data "Icon" "PassiveFeature_SongOfDefense"
data "InterruptContext" "OnPreDamage"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and HasFunctor(StatsFunctorType.DealDamage) and not Self(context.Source,context.Observer) and HasStatus('BLADESONG',context.Observer)"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE,100,1);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_DEFENSE,100,0)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:1"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasStatus('SG_Polymorph') or Tagged('MINDFLAYER')"
data "EnableContext" "OnStatusApplied"

new entry "Interrupt_SongOfDefense_2"
type "InterruptData"
using "Interrupt_SongOfDefense"
data "DescriptionParams" "2;10"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE_2,100,1);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_DEFENSE,100,0)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:2"

new entry "Interrupt_SongOfDefense_3"
type "InterruptData"
using "Interrupt_SongOfDefense"
data "DescriptionParams" "3;15"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE_3,100,1);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_DEFENSE,100,0)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:3"

new entry "Interrupt_SongOfDefense_4"
type "InterruptData"
using "Interrupt_SongOfDefense"
data "DescriptionParams" "4;20"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE_4,100,1);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_DEFENSE,100,0)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:4"

new entry "Interrupt_SongOfDefense_5"
type "InterruptData"
using "Interrupt_SongOfDefense"
data "DescriptionParams" "5;25"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE_5,100,1);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_DEFENSE,100,0)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:5"

new entry "Interrupt_SongOfDefense_6"
type "InterruptData"
using "Interrupt_SongOfDefense"
data "DescriptionParams" "6;30"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE_6,100,1);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_DEFENSE,100,0)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:6"

new entry "Interrupt_SongOfDefense_7"
type "InterruptData"
using "Interrupt_SongOfDefense"
data "DescriptionParams" "7;35"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE_7,100,1);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_DEFENSE,100,0)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:7"

new entry "Interrupt_SongOfDefense_8"
type "InterruptData"
using "Interrupt_SongOfDefense"
data "DescriptionParams" "8;40"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE_8,100,1);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_DEFENSE,100,0)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:8"

new entry "Interrupt_SongOfDefense_9"
type "InterruptData"
using "Interrupt_SongOfDefense"
data "DescriptionParams" "9;45"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE_9,100,1);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_DEFENSE,100,0)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:9"

new entry "REBUKE_THE_VIOLENT"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "h8e034c3fg57e7g4e81g80bcg7b6f02f46d9c;1"
data "Description" "h80c5bc2fgea9bg4bc6gbd49ge1b80d1d536c;1"
data "Icon" "PassiveFeature_DampenElements"
data "Boosts" "UnlockInterrupt(Interrupt_RebukeTheViolent)"
data "StackId" "REBUKE_THE_VIOLENT"
data "StatusGroups" "SG_RemoveOnRespec"

new entry "Interrupt_RebukeTheViolent"
type "InterruptData"
data "DisplayName" "h491d863ag5353g4536ga752gbbe43c580690;1"
data "Description" "h2bcdafc9g89bfg411ega025gc4c99b623e55;1"
data "Icon" "PassiveFeature_DampenElements"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Nearby"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and Ally(context.Target,context.Observer) and not Self(context.Target,context.Observer) and not Self(context.Source,context.Observer) and not AnyEntityIsItem() and IsAttack() and IsHit()"
data "Roll" "not SavingThrow(Ability.Wisdom, SourceSpellDC(10,context.Observer,Ability.Charisma),false,false,context.Source)"
data "Success" "ApplyStatus(OBSERVER_SOURCE,REBUKE_THE_VIOLENT_REDIRECT_FULL,100,1)"
data "Failure" "ApplyStatus(OBSERVER_SOURCE,REBUKE_THE_VIOLENT_REDIRECT_HALF,100,1)"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasStatus('SG_Polymorph') or Tagged('MINDFLAYER') or HasStatus('SG_Disguise')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"

new entry "REBUKE_THE_VIOLENT_REDIRECT_FULL"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "h8e034c3fg57e7g4e81g80bcg7b6f02f46d9c;1"
data "Description" "h80c5bc2fgea9bg4bc6gbd49ge1b80d1d536c;1"
data "Icon" "PassiveFeature_DampenElements"
data "StackId" "REBUKE_THE_VIOLENT_REDIRECT_FULL"
data "RemoveEvents" "OnDamage"
data "StatusGroups" "SG_RemoveOnRespec"

new entry "REBUKE_THE_VIOLENT_REDIRECT_HALF"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "h8e034c3fg57e7g4e81g80bcg7b6f02f46d9c;1"
data "Description" "h80c5bc2fgea9bg4bc6gbd49ge1b80d1d536c;1"
data "Icon" "PassiveFeature_DampenElements"
data "StackId" "REBUKE_THE_VIOLENT_REDIRECT_HALF"
data "RemoveEvents" "OnDamage"
data "StatusGroups" "SG_RemoveOnRespec"

new entry "OATH_OF_REDEMPTION_DAMAGE_1"
type "StatusData"
data "StatusType" "BOOST"
data "OnApplyFunctors" "DealDamage(1,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_2"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(2,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_3"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(3,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_4"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(4,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_5"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(5,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_6"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(6,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_7"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(7,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_8"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(8,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_9"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(9,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_10"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(10,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_10"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(10,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_11"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(11,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_12"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(12,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_13"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(13,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_14"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(14,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_15"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(15,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_16"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(16,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_17"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(17,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_18"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(18,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_19"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(19,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_20"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(20,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_21"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(21,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_22"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(22,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_23"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(23,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_24"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(24,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_25"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(25,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_26"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(26,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_27"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(27,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_28"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(28,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_29"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(29,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_30"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(30,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_31"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(31,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_32"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(32,Radiant,Magical)"

new entry "OATH_OF_REDEMPTION_DAMAGE_33"
type "StatusData"
data "StatusType" "BOOST"
using "OATH_OF_REDEMPTION_DAMAGE_1"
data "OnApplyFunctors" "DealDamage(33,Radiant,Magical)"

new entry "AURA_OF_THE_GUARDIAN"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "hb5d881e5g9da3g47e5g811cge80da6f7372d;1"
data "Description" "h58a9aa10gbb13g4fd2gbe98gab549796136e;2"
data "Icon" "Spell_Abjuration_WardingBond"
data "SoundLoop" "Spell_Status_Buff_MO"
data "Boosts" "UnlockInterrupt(Interrupt_AuraOfTheGuardian)"
data "StackId" "AURA_OF_THE_GUARDIAN"
data "StackPriority" "0"
data "RemoveEvents" "OnSourceDeath"

new entry "Interrupt_AuraOfTheGuardian"
type "InterruptData"
data "DisplayName" "h501fac01gd0cdg4dffgb148gd86d52bddf6a;1"
data "Description" "h7d39ad03gd8f8g498eg8d27g112b7b0efbaf;2"
data "Icon" "PassiveFeature_DeflectMissiles"
data "InterruptContext" "OnPreDamage"
data "InterruptContextScope" "Nearby"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and Ally(context.Target,context.Observer) and not Self(context.Target,context.Observer) and not AnyEntityIsItem() and IsHit() and HasFunctor(StatsFunctorType.DealDamage) and not DistanceToEntityGreaterThan(3, context.ObserverPosition, context.Target)"
data "Properties" "ApplyStatus(OBSERVER_TARGET,AURA_OF_THE_GUARDIAN_TECHNICAL,100,1)"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"
data "EnableCondition" "not HasAnyStatus({'SG_Polymorph','SG_Blinded'}) or Tagged('MINDFLAYER') or HasStatus('SG_Disguise')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"

new entry "AURA_OF_THE_GUARDIAN_TECHNICAL"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "hb5d881e5g9da3g47e5g811cge80da6f7372d;1"
data "Description" "h58a9aa10gbb13g4fd2gbe98gab549796136e;2"
data "Icon" "Spell_Abjuration_WardingBond"
data "Boosts" "RedirectDamage(1)"
data "StackId" "AURA_OF_THE_GUARDIAN_TECHNICAL"
data "StackPriority" "0"
data "RemoveEvents" "OnSourceDeath"

new entry "AURA_OF_THE_GUARDIAN_OWNER"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "hb5d881e5g9da3g47e5g811cge80da6f7372d;1"
data "Description" "h58a9aa10gbb13g4fd2gbe98gab549796136e;2"
data "Icon" "Spell_Abjuration_WardingBond"
data "StackId" "AURA_OF_THE_GUARDIAN_OWNER"
data "Boosts" "IgnoreResistance(All,Resistant);IgnoreResistance(All,Immune)"
data "StackPriority" "0"
data "RemoveEvents" "OnDamage"

new entry "AURA_OF_THE_GUARDIAN_BLUDGEONING_1"
type "StatusData"
data "StatusType" "BOOST"
data "OnApplyFunctors" "DealDamage(1,Bludgeoning,Magical)"

new entry "AURA_OF_THE_GUARDIAN_BLUDGEONING_2"
type "StatusData"
data "StatusType" "BOOST"
using "AURA_OF_THE_GUARDIAN_BLUDGEONING_1"
data "OnApplyFunctors" "DealDamage(2,Bludgeoning,Magical)"

new entry "AURA_OF_THE_GUARDIAN_BLUDGEONING_3"
type "StatusData"
data "StatusType" "BOOST"
using "AURA_OF_THE_GUARDIAN_BLUDGEONING_1"
data "OnApplyFunctors" "DealDamage(3,Bludgeoning,Magical)"

new entry "AURA_OF_THE_GUARDIAN_BLUDGEONING_4"
type "StatusData"
data "StatusType" "BOOST"
using "AURA_OF_THE_GUARDIAN_BLUDGEONING_1"
data "OnApplyFunctors" "DealDamage(4,Bludgeoning,Magical)"

new entry "AURA_OF_THE_GUARDIAN_BLUDGEONING_5"
type "StatusData"
data "StatusType" "BOOST"
using "AURA_OF_THE_GUARDIAN_BLUDGEONING_1"
data "OnApplyFunctors" "DealDamage(5,Bludgeoning,Magical)"

new entry "AURA_OF_THE_GUARDIAN_BLUDGEONING_6"
type "StatusData"
data "StatusType" "BOOST"
using "AURA_OF_THE_GUARDIAN_BLUDGEONING_1"
data "OnApplyFunctors" "DealDamage(6,Bludgeoning,Magical)"

new entry "AURA_OF_THE_GUARDIAN_BLUDGEONING_7"
type "StatusData"
data "StatusType" "BOOST"
using "AURA_OF_THE_GUARDIAN_BLUDGEONING_1"
data "OnApplyFunctors" "DealDamage(7,Bludgeoning,Magical)"

new entry "AURA_OF_THE_GUARDIAN_BLUDGEONING_8"
type "StatusData"
data "StatusType" "BOOST"
using "AURA_OF_THE_GUARDIAN_BLUDGEONING_1"
data "OnApplyFunctors" "DealDamage(8,Bludgeoning,Magical)"

new entry "AURA_OF_THE_GUARDIAN_BLUDGEONING_9"
type "StatusData"
data "StatusType" "BOOST"
using "AURA_OF_THE_GUARDIAN_BLUDGEONING_1"
data "OnApplyFunctors" "DealDamage(9,Bludgeoning,Magical)"

new entry "AURA_OF_THE_GUARDIAN_BLUDGEONING_10"
type "StatusData"
data "StatusType" "BOOST"
using "AURA_OF_THE_GUARDIAN_BLUDGEONING_1"
data "OnApplyFunctors" "DealDamage(10,Bludgeoning,Magical)"

new entry "EmissaryOfRedemption"
type "PassiveData"
data "DisplayName" "h338c514dg2200g4e40g9d77g8c2fb7a703f9;1"
data "Description" "haa742ef5ge523g4255g83b0ga592f92e79cc;1"
data "Icon" "Spell_Abjuration_WardingBond"
data "Properties" "Highlighted"
data "StatsFunctors" "IF(context.HasContextFlag(StatsFunctorContext.OnAttack) and (IsAttack() or IsSpell())):ApplyStatus(EMISSARY_OF_REDEMPTION,100,-1);IF(context.HasContextFlag(StatsFunctorContext.OnCreate) and not HasStatus('EMISSARY_OF_REDEMPTION_AURA',context.Source)):ApplyStatus(EMISSARY_OF_REDEMPTION_AURA,100,-1)"
data "StatsFunctorContext" "OnCreate;OnAttack;OnDamaged"

;IF(context.HasContextFlag(StatsFunctorContext.OnAttacked) and not HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE') and not HasStatus('EMISSARY_OF_REDEMPTION',context.Source)):ApplyStatus(EMISSARY_OF_REDEMPTION_RESISTANCE,100,-1);IF(context.HasContextFlag(StatsFunctorContext.OnAttacked) and HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE') and HasStatus('EMISSARY_OF_REDEMPTION',context.Source)):ApplyStatus(EMISSARY_OF_REDEMPTION_RESISTANCE_TECHNICAL,100,-1)

new entry "EMISSARY_OF_REDEMPTION"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "EMISSARY_OF_REDEMPTION"
data "Boosts" "IF(HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE')):IgnoreResistance(Bludgeoning,Resistant);IF(HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE')):IgnoreResistance(Slashing,Resistant);IF(HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE')):IgnoreResistance(Piercing,Resistant);IF(HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE')):IgnoreResistance(Acid,Resistant);IF(HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE')):IgnoreResistance(Cold,Resistant);IF(HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE')):IgnoreResistance(Fire,Resistant);IF(HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE')):IgnoreResistance(Lightning,Resistant);IF(HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE')):IgnoreResistance(Thunder,Resistant);IF(HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE')):IgnoreResistance(Poison,Resistant);IF(HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE')):IgnoreResistance(Force,Resistant);IF(HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE')):IgnoreResistance(Radiant,Resistant);IF(HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE')):IgnoreResistance(Necrotic,Resistant);IF(HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE')):IgnoreResistance(Psychic,Resistant)"

new entry "EMISSARY_OF_REDEMPTION_INTERRUPT"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "EMISSARY_OF_REDEMPTION_INTERRUPT"
data "Boosts" "UnlockInterrupt(Interrupt_EmissaryOfRedemption)"

new entry "Interrupt_EmissaryOfRedemption"
type "InterruptData"
data "DisplayName" "h338c514dg2200g4e40g9d77g8c2fb7a703f9;1"
data "Description" "haa742ef5ge523g4255g83b0ga592f92e79cc;1"
data "Icon" "PassiveFeature_DeflectMissiles"
data "InterruptContext" "OnPreDamage"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "not Self(context.Source,context.Observer)"
data "Properties" "IF(not HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE',context.Observer) and not HasStatus('EMISSARY_OF_REDEMPTION',context.Source)):ApplyStatus(OBSERVER_OBSERVER,EMISSARY_OF_REDEMPTION_RESISTANCE,100,-1);IF(HasStatus('EMISSARY_OF_REDEMPTION_RESISTANCE',context.Observer) and HasStatus('EMISSARY_OF_REDEMPTION',context.Source)):ApplyStatus(OBSERVER_OBSERVER,EMISSARY_OF_REDEMPTION_RESISTANCE_TECHNICAL,100,-1)"
data "InterruptDefaultValue" "Enabled"
data "EnableCondition" "not HasAnyStatus({'SG_Polymorph','SG_Blinded'}) or Tagged('MINDFLAYER') or HasStatus('SG_Disguise')"
data "EnableContext" "OnStatusApplied;OnStatusRemoved"

new entry "EMISSARY_OF_REDEMPTION_RESISTANCE"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "EMISSARY_OF_REDEMPTION_RESISTANCE"
data "Boosts" "Resistance(All,Resistant)"
data "OnRemoveFunctors" "ApplyStatus(EMISSARY_OF_REDEMPTION_RESISTANCE_TECHNICAL,100,-1)"

new entry "EMISSARY_OF_REDEMPTION_RESISTANCE_TECHNICAL"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "EMISSARY_OF_REDEMPTION_RESISTANCE"

new entry "EMISSARY_OF_REDEMPTION_REFLECT"
type "StatusData"
data "StatusType" "BOOST"
data "StackId" "EMISSARY_OF_REDEMPTION_REFLECT"

new entry "ANIM_TEST"
type "StatusData"
data "StatusType" "BOOST"
data "DisplayName" "h74170c6cg522bg443fga205g61a79c8c8f2f;1"
data "StatusPropertyFlags" "IgnoreResting;ApplyToDead;DisableCombatlog;DisableOverhead;"
data "AnimationStart" "b94b9184-9bd0-4840-be7d-003700173b37(Skill_Fly_01_Prepare)"
data "AnimationLoop" "066f8e0e-b3e1-4b76-a473-d1e23a3b7230(Skill_Fly_01_Prepare_Loop)"
data "AnimationEnd" "7a28f440-1b0b-4a18-96a8-3767959b601a(Skill_Fly_01_Prepare_Cancel)"
data "StillAnimationPriority" "Snared"
data "DynamicAnimationTag" "5b29a364-1c0c-405c-86ce-29de8c5dabfc"

new entry "EMISSARY_OF_REDEMPTION_AURA"
type "StatusData"
data "StatusType" "BOOST"
data "Icon" "Spell_Abjuration_WardingBond"
data "StackId" "EMISSARY_OF_REDEMPTION_AURA"

new entry "EMISSARY_OF_REDEMPTION_TECHNICAL"
type "StatusData"
data "StatusType" "BOOST"
data "Icon" "Spell_Abjuration_WardingBond"
data "StackId" "EMISSARY_OF_REDEMPTION_TECHNICAL"