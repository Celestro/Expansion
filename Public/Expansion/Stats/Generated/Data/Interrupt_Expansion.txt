new entry "Interrupt_Interception"
type "InterruptData"
data "DisplayName" "Interception"
data "Description" "When you have a shield or weapon, reduce the damage dealt by an enemy who attacks on your allies when you are within [1]. You must be able to see the enemy."
data "DescriptionParams" "Distance(1.5)"
data "Icon" "PassiveAction_FightingStyle_Interception"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Nearby"
data "Container" "YesNoDecision"
data "Conditions" "(HasShieldEquipped(context.Observer) or not Unarmed(context.Observer)) and IsAbleToReact(context.Observer) and not Self(context.Source, context.Observer) and HasStatus('FIGHTING_STYLE_INTERCEPTION',context.Target) and Ally(context.Target) and not HasStatus('FIGHTING_STYLE_INTERCEPTION_2',context.Target) and not HasStatus('FIGHTING_STYLE_INTERCEPTION_3',context.Target) and not HasStatus('FIGHTING_STYLE_INTERCEPTION_4',context.Target) and not HasStatus('FIGHTING_STYLE_INTERCEPTION_5',context.Target) and not HasStatus('FIGHTING_STYLE_INTERCEPTION_6',context.Target) and HasInterruptedAttack() and HasFunctor(StatsFunctorType.DealDamage)"
data "Properties" "IF(ConditionResult(context.Observer.ProficiencyBonus == 2)):ApplyStatus(OBSERVER_TARGET,FIGHTING_STYLE_INTERCEPTION_2,100,1);IF(ConditionResult(context.Observer.ProficiencyBonus == 3)):ApplyStatus(OBSERVER_TARGET,FIGHTING_STYLE_INTERCEPTION_3,100,1);IF(ConditionResult(context.Observer.ProficiencyBonus == 4)):ApplyStatus(OBSERVER_TARGET,FIGHTING_STYLE_INTERCEPTION_4,100,1);IF(ConditionResult(context.Observer.ProficiencyBonus == 5)):ApplyStatus(OBSERVER_TARGET,FIGHTING_STYLE_INTERCEPTION_5,100,1);IF(ConditionResult(context.Observer.ProficiencyBonus == 6)):ApplyStatus(OBSERVER_TARGET,FIGHTING_STYLE_INTERCEPTION_6,100,1)"
data "Stack" "Interception"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_UncannyDodge"
type "InterruptData"
data "DisplayName" "Shared_Passive_UncannyDodge_DisplayName"
data "Description" "Shared_Passive_UncannyDodge_Description"
data "Icon" "PassiveFeature_UncannyDodge"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and not Self(context.Source, context.Observer) and HasFunctor(StatsFunctorType.DealDamage)"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,UNCANNY_DODGE,100,1)"
data "Stack" "UncannyDodge"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_BendLuck_Enemy"
type "InterruptData"
data "DisplayName" "Bend Luck"
data "Description" "Subtract [1] from a hostile creature's Attack Roll or Saving Throw."
data "DescriptionParams" "1d4"
data "Icon" "Skill_Sorcerer_Passive_BendLuck"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Nearby"
data "Container" "YesNoDecision"
data "Conditions" "not Dead(context.Observer) and not Self(context.Source, context.Observer) and ((HasInterruptedAttack() or SpellId('Target_MainHandAttack')) and Enemy(context.Source,context.Observer)) or (HasInterruptedSavingThrow() and Enemy(context.Target,context.Observer))"
data "Properties" "AdjustRoll(OBSERVER_TARGET,-1d4)"
data "Cost" "ReactionActionPoint:1;SorceryPoint:2"
data "Stack" "BendLuck"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_BendLuck_Ally"
type "InterruptData"
using "Interrupt_BendLuck_Enemy"
data "Description" "Add [1] from an allied creature's Attack Roll or Saving Throw."
data "InterruptContext" "OnPostRoll"
data "Conditions" "not Dead(context.Observer) and not Self(context.Source, context.Observer) and (HasInterruptedAttack() and Ally(context.Source,context.Observer)) or (HasInterruptedSavingThrow() and Ally(context.Target,context.Observer))"
data "Properties" "AdjustRoll(OBSERVER_TARGET,1d4)"

new entry "Interrupt_SuperiorBeastsDefense"
type "InterruptData"
data "DisplayName" "Superior Beast's Defense"
data "Description" "Reduce damage dealt to you by half."
data "Icon" "PassiveFeature_Ranger_SuperiorBeastsDefense"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and not Self(context.Source, context.Observer) and not HasStatus('SG_Blinded',context.Observer) and not HasStatus('SG_Invisible',context.Target) and HasFunctor(StatsFunctorType.DealDamage)"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SUPERIOR_BEASTS_DEFENSE_STATUS,100,1)"
data "Stack" "SuperiorBeastsDefense"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_TombOfLevistus"
type "InterruptData"
data "DisplayName" "Superior Beast's Defense"
data "Description" "Entomb yourself in ice when you take damage, causing you to gain [1]. However, you also gain vulnerability to fire, your Movement is reduced to 0 and you become Incapacitated."
data "ExtraDescription" "Once this feature is used, it cannot be used again until you finish a short or long rest."
data "DescriptionParams" "GainTemporaryHitPoints(10*Level)"
data "Icon" "Skill_Warlock_TombOfLevistus"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and not Self(context.Source, context.Observer) and HasFunctor(StatsFunctorType.DealDamage)"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,TOMB_OF_LEVISTUS,100,1)"
data "Stack" "TombOfLevistus"
data "Cost" "ReactionActionPoint:1;TombOfLevistus:1"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_DarkOnesOwnLuck"
type "InterruptData"
data "DisplayName" "Dark One's Own Luck"
data "Description" "Add [1] you a Saving Throw you make."
data "DescriptionParams" "1d10"
data "Icon" "Skill_Warlock_DarkOnesOwnLuck"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "not Dead(context.Observer) and Self(context.Source, context.Observer) and HasInterruptedSavingThrow()"
data "Properties" "AdjustRoll(OBSERVER_OBSERVER,1d10)"
data "Cost" "DarkOnesOwnLuck:1"
data "Stack" "DarkOnesOwnLuck"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_Riposte"
type "InterruptData"
data "DisplayName" "Shared_Interrupt_Interrupt_Riposte_DisplayName"
data "Description" "Shared_Interrupt_Interrupt_Riposte_Description"
data "Icon" "PassiveFeature_Riposte"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and Enemy(context.Source,context.Observer) and IsMeleeAttack() and IsMiss() and not HasStatus('INVISIBILITY')"
data "Properties" "UseSpell(SWAP,Target_Riposte,true,true,true);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_RIPOSTE,100,0)"
data "Cost" "ReactionActionPoint:1;SuperiorityDie:1"
data "Stack" "Maneuver"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_MenacingAttack"
type "InterruptData"
data "DisplayName" "Menacing Attack"
data "Description" "Shared_Target_MenacingAttack_Description"
data "Icon" "Action_MenacingAttack_Melee"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and Self(context.Source,context.Observer) and IsWeaponAttack() and HasDamageEffectFlag(DamageFlags.Hit) and not IsKillingBlow() and not HasStatus('FEINT_ATTACK_TECHNICAL',context.Observer) and not HasStatus('PRECISION_ATTACK_TECHNICAL_2',context.Observer)"
data "Properties" "ApplyStatus(OBSERVER_TARGET,MENACING_ATTACK_PROC,100,1);IF(IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(SuperiorityDie), MainMeleeWeaponDamageType);IF(IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(SuperiorityDie), MainRangedWeaponDamageType);IF(IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(SuperiorityDie), OffhandMeleeWeaponDamageType);IF(IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(SuperiorityDie), OffhandRangedWeaponDamageType)"
data "Cost" "SuperiorityDie:1"
data "Stack" "Maneuver"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_MenacingAttack_Critical"
type "InterruptData"
using "Interrupt_MenacingAttack"
data "DisplayName" "Menacing Attack: Critical"
data "ExtraDescription" "This maneuver only triggers when you land a Critical Hit."
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and Self(context.Source,context.Observer) and IsWeaponAttack() and HasDamageEffectFlag(DamageFlags.Hit) and IsCritical() and not IsKillingBlow() and not HasStatus('FEINT_ATTACK_TECHNICAL',context.Observer) and not HasStatus('PRECISION_ATTACK_TECHNICAL_2',context.Observer)"

new entry "Interrupt_PushingAttack"
type "InterruptData"
using "Interrupt_MenacingAttack"
data "DisplayName" "Pushing Attack"
data "Description" "Shared_Target_PushingAttack_Description"
data "Icon" "Action_PushingAttack_Melee"
data "Properties" "ApplyStatus(OBSERVER_TARGET,PUSHING_ATTACK_PROC,100,1);IF(IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(SuperiorityDie), MainMeleeWeaponDamageType);IF(IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(SuperiorityDie), MainRangedWeaponDamageType);IF(IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(SuperiorityDie), OffhandMeleeWeaponDamageType);IF(IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(SuperiorityDie), OffhandRangedWeaponDamageType)"

new entry "Interrupt_PushingAttack_Critical"
type "InterruptData"
using "Interrupt_PushingAttack"
data "DisplayName" "Pushing Attack: Critical"
data "ExtraDescription" "This maneuver only triggers when you land a Critical Hit."
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and Self(context.Source,context.Observer) and IsWeaponAttack() and HasDamageEffectFlag(DamageFlags.Hit) and IsCritical() and not IsKillingBlow() and not HasStatus('FEINT_ATTACK_TECHNICAL',context.Observer) and not HasStatus('PRECISION_ATTACK_TECHNICAL_2',context.Observer)"

new entry "Interrupt_DisarmingAttack"
type "InterruptData"
using "Interrupt_MenacingAttack"
data "DisplayName" "Disarming Attack"
data "Description" "Shared_Target_DisarmingAttack_Description"
data "Icon" "Action_DisarmingAttack_Melee"
data "Properties" "ApplyStatus(OBSERVER_TARGET,DISARMING_ATTACK_PROC,100,1);IF(IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(SuperiorityDie), MainMeleeWeaponDamageType);IF(IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(SuperiorityDie), MainRangedWeaponDamageType);IF(IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(SuperiorityDie), OffhandMeleeWeaponDamageType);IF(IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(SuperiorityDie), OffhandRangedWeaponDamageType)"

new entry "Interrupt_DisarmingAttack_Critical"
type "InterruptData"
using "Interrupt_DisarmingAttack"
data "DisplayName" "Disarming Attack: Critical"
data "ExtraDescription" "This maneuver only triggers when you land a Critical Hit."
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and Self(context.Source,context.Observer) and IsWeaponAttack() and HasDamageEffectFlag(DamageFlags.Hit) and IsCritical() and not IsKillingBlow() and not HasStatus('FEINT_ATTACK_TECHNICAL',context.Observer) and not HasStatus('PRECISION_ATTACK_TECHNICAL_2',context.Observer)"

new entry "Interrupt_TripAttack"
type "InterruptData"
using "Interrupt_MenacingAttack"
data "DisplayName" "Trip Attack"
data "Description" "Shared_Target_TripAttack_Description"
data "Icon" "Action_TripAttack_Melee"
data "Properties" "ApplyStatus(OBSERVER_TARGET,TRIP_ATTACK_PROC,100,1);IF(IsAttackType(AttackType.MeleeWeaponAttack)):DealDamage(LevelMapValue(SuperiorityDie), MainMeleeWeaponDamageType);IF(IsAttackType(AttackType.RangedWeaponAttack)):DealDamage(LevelMapValue(SuperiorityDie), MainRangedWeaponDamageType);IF(IsAttackType(AttackType.MeleeOffHandWeaponAttack)):DealDamage(LevelMapValue(SuperiorityDie), OffhandMeleeWeaponDamageType);IF(IsAttackType(AttackType.RangedOffHandWeaponAttack)):DealDamage(LevelMapValue(SuperiorityDie), OffhandRangedWeaponDamageType)"

new entry "Interrupt_TripAttack_Critical"
type "InterruptData"
using "Interrupt_TripAttack"
data "DisplayName" "Trip Attack: Critical"
data "ExtraDescription" "This maneuver only triggers when you land a Critical Hit."
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and Self(context.Source,context.Observer) and IsWeaponAttack() and HasDamageEffectFlag(DamageFlags.Hit) and IsCritical() and not IsKillingBlow() and not HasStatus('FEINT_ATTACK_TECHNICAL',context.Observer) and not HasStatus('PRECISION_ATTACK_TECHNICAL_2',context.Observer)"

new entry "Interrupt_FlurryOfBlows"
type "InterruptData"
data "DisplayName" "Flurry of Blows"
data "Description" "After you take the Attack action, you can spend 1 ki point to make two unarmed strikes as a bonus action."
data "Icon" "PassiveFeature_FlurryOfBlows"
data "InterruptContext" "OnSpellCast"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and (SpellTypeIs(SpellType.Target) or SpellTypeIs(SpellType.Projectile)) and HasSpellFlag(SpellFlags.Harmful) and HasUseCosts('ActionPoint', true) and Self(context.Source,context.Observer) and HasActionResource('BonusActionPoint',1,0,false,context.Observer)"
data "Properties" "IF(SpellId('Target_FangsOfTheFireSnake_Dexterity_Ki') or SpellId('Target_FangsOfTheFireSnake_Dexterity_Ki_2') or SpellId('Target_FangsOfTheFireSnake_Strength_Ki') or SpellId('Target_FangsOfTheFireSnake_Strength_Ki_2')):ApplyStatus(OBSERVER_OBSERVER,FANGS_OF_THE_FIRE_SNAKE,100,1);ApplyStatus(OBSERVER_OBSERVER,FLURRY_OF_BLOWS,100,1);IF(HasPassive('OpenHandTechnique',context.Observer)):ApplyStatus(OBSERVER_OBSERVER,OPEN_HAND_TECHNIQUE,100,1)"
data "Cost" "KiPoint:1"
data "Stack" "FlurryOfBlows"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_DeflectMissiles"
type "InterruptData"
data "DisplayName" "Deflect Missiles"
data "Description" "Deflect or catch the missile when you are hit by a ranged weapon attack, reducing its damage by 1d10 + your Dexterity modifier + your monk Level."
data "Icon" "PassiveFeature_DeflectMissiles"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and not Self(context.Source, context.Observer) and HasInterruptedAttack() and HasStringInSpellRoll('WeaponAttack') and SpellTypeIs(SpellType.Projectile)"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,DEFLECT_MISSILES,100,1)"
data "Stack" "DeflectMissiles"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_KiFueledAttack"
type "InterruptData"
using "Interrupt_FlurryOfBlows"
data "DisplayName" "Ki-Fueled Attack"
data "Description" "If you spend 1 ki point or more as part of your action on your turn, you can make one attack with an unarmed strike or a monk weapon as a bonus action before the end of the turn."
data "Icon" "PassiveFeature_KiFueledAttack"
data "Conditions" "IsAbleToReact(context.Observer) and HasUseCosts('ActionPoint', true) and HasUseCosts('KiPoint', true) and Self(context.Source,context.Observer)"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,KI_FUELED_ATTACK_PROC,100,0)"
data "Cost" ""
data "Stack" "KiFueledAttack"

new entry "Interrupt_DeflectMissiles_Ki"
type "InterruptData"
data "DisplayName" "Deflect Missiles: Ki"
using "Interrupt_DeflectMissiles"
data "Description" "When you reduce a ranged weapon attack's damage to 0, spend 1 ki point to make a ranged attack."
data "InterruptContext" "OnCastHit"
data "Conditions" "IsAbleToReact(context.Observer) and not Self(context.Source, context.Observer) and IsRangedAttack() and IsWeaponAttack() and IsHit() and not TotalDamageDoneGreaterThan(0) and not TotalAttackDamageDoneGreaterThan(0)"
data "Cost" "KiPoint:1"
data "Properties" "UseSpell(SWAP,Projectile_DeflectMissiles,true,true,true);RemoveStatus(OBSERVER_OBSERVER,DEFLECT_MISSILES)"

new entry "Interrupt_StunningStrike"
type "InterruptData"
using "Interrupt_FlurryOfBlows"
data "DisplayName" "Stunning Strike"
data "Description" "You can interfere with the flow of ki in an opponent’s body. When you hit another creature with a melee weapon attack, you can spend 1 ki point to attempt a stunning strike."
data "Icon" "PassiveFeature_StunningStrike"
data "InterruptContext" "OnCastHit"
data "Conditions" "IsAbleToReact(context.Observer) and (IsMeleeWeaponAttack() or IsMeleeUnarmedAttack()) and Self(context.Source,context.Observer) and IsHit() and not IsKillingBlow() and not HasStatus('SG_Stunned',context.Target)"
data "Roll" "not SavingThrow(Ability.Constitution, SourceSpellDC())"
data "Success" "ApplyStatus(STUNNING_STRIKE,100,2)"
data "Stack" "StunningStrike"

new entry "Interrupt_FocusedAim"
type "InterruptData"
data "DisplayName" "Focused Aim: 1 Ki Point"
data "Description" "Spend 1 ki point to increase your attack roll by [1]."
data "DescriptionParams" "2"
data "Icon" "PassiveFeature_FocusedAim"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "not Dead(context.Observer) and HasInterruptedAttack() and Self(context.Observer,context.Source)"
data "Properties" "AdjustRoll(OBSERVER_OBSERVER,2)"
data "Cost" "KiPoint:1"
data "Stack" "FocusedKi"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_FocusedAim_2"
type "InterruptData"
using "Interrupt_FocusedAim"
data "DescriptionParams" "4"
data "DisplayName" "Focused Aim: 2 Ki Points"
data "Properties" "AdjustRoll(OBSERVER_OBSERVER,4)"
data "Cost" "KiPoint:2"

new entry "Interrupt_FocusedAim_3"
type "InterruptData"
using "Interrupt_FocusedAim"
data "DisplayName" "Focused Aim: 3 Ki Points"
data "DescriptionParams" "6"
data "Properties" "AdjustRoll(OBSERVER_OBSERVER,6)"
data "Cost" "KiPoint:3"

new entry "Interrupt_Opportunist"
type "InterruptData"
using "Interrupt_FlurryOfBlows"
data "DisplayName" "Opportunist"
data "Description" "You can exploit a creature's momentary distraction when it is hit by an attack while within [1] of you by making a melee attack against it."
data "DescriptionParams" "Distance(1.5)"
data "Icon" "PassiveAction_Opportunist"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Nearby"
data "Conditions" "IsAbleToReact(context.Observer) and not Self(context.Source, context.Observer) and HasStatus('OPPORTUNIST_TARGET',context.Target) and IsAttack() and IsHit()"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,OPPORTUNIST_ATTACK_AURA,100,0)"
data "Cost" "ReactionActionPoint:1"
data "Stack" "Opportunist"

new entry "Interrupt_QuiveringPalm"
type "InterruptData"
using "Interrupt_FlurryOfBlows"
data "DisplayName" "Quivering Palm"
data "Description" "You gain the ability to set up lethal vibrations in someone's body."
data "Icon" "PassiveFeature_QuiveringPalm"
data "InterruptContext" "OnCastHit"
data "Conditions" "IsAbleToReact(context.Observer) and IsMeleeUnarmedAttack() and Self(context.Source,context.Observer) and IsHit() and not HasStatus('QUIVERING_PALM',context.Target) and not HasStatus('QUIVERING_PALM_TECHNICAL',context.Observer)"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,QUIVERING_PALM_TECHNICAL,100,-1);ApplyStatus(OBSERVER_TARGET,QUIVERING_PALM,100,-1)"
data "Cost" "KiPoint:3"
data "Stack" "QuiveringPalm"

new entry "Interrupt_AuraOfProtection"
type "InterruptData"
data "DisplayName" "Aura of Protection"
data "Description" "Gain a bonus to Saving Throws equal to [1]."
data "DescriptionParams" "CharismaModifier"
data "Icon" "PassiveFeature_AuraOfProtection"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Nearby"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and not HasStatus('SG_Incapacitated',context.Observer) and (HasStatus('AURA_OF_PROTECTION_TECHNICAL',context.Target) or HasStatus('AURA_OF_PROTECTION',context.Target) or HasStatus('AURA_OF_PROTECTION_2',context.Target)) and IsSavingThrow()"
data "Properties" "IF(ConditionResult(context.Observer.Charisma < 12)):AdjustRoll(OBSERVER_TARGET,1);IF(ConditionResult(context.Observer.Charisma > 11)):AdjustRoll(OBSERVER_TARGET,CharismaModifier)"
data "Stack" "AuraOfProtection"
data "InterruptDefaultValue" "Enabled"

new entry "Interrupt_EldritchSmite"
type "InterruptData"
data "DisplayName" "Eldritch Smite"
data "Description" "Your weapon emanates eldritch might as you strike, dealing an additional [1]."
data "DescriptionParams" "DealDamage(4d8,Force);"
data "ExtraDescription" "This reaction won't trigger on a Critical Hit."
data "Icon" "Skill_Warlock_EldritchSmite"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and IsMeleeAttack() and Self(context.Source,context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and IsWeaponAttack() and not IsCritical() and not IsKillingBlow() and (HasStatus('PACT_OF_THE_BLADE',GetActiveWeapon(context.Observer,true)) or HasStatus('BOUND_WEAPON',GetActiveWeapon(context.Observer,true)) or HasStatus('PACT_OF_THE_BLADE_HEX_WARRIOR',GetActiveWeapon(context.Observer,true)) or HasStatus('BOUND_WEAPON_HEX_WARRIOR',GetActiveWeapon(context.Observer,true))) and not HasStatus('ELDRITCH_SMITE_BLOCK',context.Observer)"
data "Properties" "DealDamage(4d8,Force);ApplyStatus(OBSERVER_OBSERVER,ELDRITCH_SMITE_BLOCK,100,1);ApplyStatus(OBSERVER_TARGET,ELDRITCH_SMITE_EFFECT,100,1)"
data "Cost" "SpellSlotsGroup:1:1:3"
data "Stack" "EldritchSmite"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_EldritchSmite_4"
type "InterruptData"
using "Interrupt_EldritchSmite"
data "DescriptionParams" "DealDamage(5d8,Force)"
data "Properties" "DealDamage(5d8,Force);ApplyStatus(OBSERVER_OBSERVER,ELDRITCH_SMITE_BLOCK,100,1);ApplyStatus(OBSERVER_TARGET,ELDRITCH_SMITE_EFFECT,100,1)"
data "Cost" "SpellSlotsGroup:1:1:4"

new entry "Interrupt_EldritchSmite_5"
type "InterruptData"
using "Interrupt_EldritchSmite"
data "DescriptionParams" "DealDamage(6d8,Force)"
data "Properties" "DealDamage(6d8,Force);ApplyStatus(OBSERVER_OBSERVER,ELDRITCH_SMITE_BLOCK,100,1);ApplyStatus(OBSERVER_TARGET,ELDRITCH_SMITE_EFFECT,100,1)"
data "Cost" "SpellSlotsGroup:1:1:5"

new entry "Interrupt_EldritchSmite_Critical"
type "InterruptData"
using "Interrupt_EldritchSmite"
data "DisplayName" "Eldritch Smite: Critical"
data "ExtraDescription" "This reaction will trigger on a Critical Hit."
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and IsMeleeAttack() and Self(context.Source,context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and IsWeaponAttack() and IsCritical() and not IsKillingBlow() and (HasStatus('PACT_OF_THE_BLADE',GetActiveWeapon(context.Observer, true)) or HasStatus('BOUND_WEAPON',GetActiveWeapon(context.Observer,true))) and not HasStatus('ELDRITCH_SMITE_BLOCK',context.Observer)"

new entry "Interrupt_EldritchSmite_Critical_4"
type "InterruptData"
using "Interrupt_EldritchSmite_Critical"
data "DescriptionParams" "DealDamage(5d8,Force)"
data "Properties" "DealDamage(5d8,Force);ApplyStatus(OBSERVER_TARGET,ELDRITCH_SMITE_EFFECT,100,0)"
data "Cost" "WarlockSpellSlot:1:1:4"

new entry "Interrupt_EldritchSmite_Critical_5"
type "InterruptData"
using "Interrupt_EldritchSmite_Critical"
data "DescriptionParams" "DealDamage(6d8,Force)"
data "Properties" "DealDamage(6d8,Force);ApplyStatus(OBSERVER_TARGET,ELDRITCH_SMITE_EFFECT,100,0)"
data "Cost" "WarlockSpellSlot:1:1:5"

new entry "Interrupt_MagicalInspiration_Damage"
type "InterruptData"
data "DisplayName" "Magical Inspiration: Damage"
data "Description" "Add an additional [1] damage when you deal damage to a creature with a spell."
data "DescriptionParams" "LevelMapValue(BardicInspiration)"
data "Icon" "PassiveFeature_MagicalInspiration_Damage"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "not Dead(context.Observer) and Character() and Self(context.Source, context.Observer) and HasFunctor(StatsFunctorType.DealDamage) and not IsKillingBlow() and IsSpell()"
data "Properties" "IF(SpellDamageTypeIs(DamageType.Fire)):DealDamage(ResourceRoll(BardicInspiration,1), Fire);IF(SpellDamageTypeIs(DamageType.Cold)):DealDamage(ResourceRoll(BardicInspiration,1), Cold);IF(SpellDamageTypeIs(DamageType.Lightning)):DealDamage(ResourceRoll(BardicInspiration,1), Lightning);IF(SpellDamageTypeIs(DamageType.Acid)):DealDamage(ResourceRoll(BardicInspiration,1), Acid);IF(SpellDamageTypeIs(DamageType.Poison)):DealDamage(ResourceRoll(BardicInspiration,1), Poison);IF(SpellDamageTypeIs(DamageType.Force)):DealDamage(ResourceRoll(BardicInspiration,1), Force);IF(SpellDamageTypeIs(DamageType.Necrotic)):DealDamage(ResourceRoll(BardicInspiration,1), Necrotic);IF(SpellDamageTypeIs(DamageType.Radiant)):DealDamage(ResourceRoll(BardicInspiration,1), Radiant);IF(SpellDamageTypeIs(DamageType.Thunder)):DealDamage(ResourceRoll(BardicInspiration,1), Thunder);IF(SpellDamageTypeIs(DamageType.Psychic)):DealDamage(ResourceRoll(BardicInspiration,1), Psychic);IF(SpellDamageTypeIs(DamageType.Bludgeoning)):DealDamage(ResourceRoll(BardicInspiration,1), Bludgeoning);IF(SpellDamageTypeIs(DamageType.Slashing)):DealDamage(ResourceRoll(BardicInspiration,1), Slashing);IF(SpellDamageTypeIs(DamageType.Piercing)):DealDamage(ResourceRoll(BardicInspiration,1), Piercing);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D8);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D8);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D10);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D10);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D12);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D12);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_DAMAGE,100,0)"
data "Cost" "BardicInspiration:1"
data "Stack" "BardicInspiration"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_MagicalInspiration_Healing"
type "InterruptData"
using "Interrupt_MagicalInspiration_Damage"
data "DisplayName" "Magical Inspiration: Healing"
data "Description" "Heal an additional [1] hit points when you heal a creature with a spell."
data "Icon" "PassiveFeature_MagicalInspiration_Healing"
data "Conditions" "not Dead(context.Observer) and Character() and Self(context.Source, context.Observer) and HasFunctor(StatsFunctorType.RegainHitPoints) and IsSpell()"
data "Properties" "IF(HasStatus('BARDIC_INSPIRATION',context.Observer) or HasStatus('BARDIC_INSPIRATION_COMBAT',context.Observer)):ApplyStatus(OBSERVER_TARGET,MAGICAL_INSPIRATION_HEALING,100,0);IF(HasStatus('BARDIC_INSPIRATION_D8',context.Observer) or HasStatus('BARDIC_INSPIRATION_COMBAT_D8',context.Observer)):ApplyStatus(OBSERVER_TARGET,MAGICAL_INSPIRATION_HEALING_D8,100,0);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D8);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D8);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D10);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D10);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D12);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D12)"

new entry "Interrupt_ProjectedWard"
type "InterruptData"
data "DisplayName" "Projected Ward"
data "Description" "When a creature that you can see within [1] of you takes damage, you can cause your Arcane Ward to absorb that damage. If this damage reduces the ward to [2], the warded creature takes any remaining damage."
data "DescriptionParams" "Distance(9);RegainHitPoints(0)"
data "Icon" "Skill_Wizard_ProjectedWard"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Nearby"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and HasStatus('PROJECTED_WARD',context.Target) and Ally(context.Target) and HasFunctor(StatsFunctorType.DealDamage)"
data "Properties" "IF(HasTemporaryHPInterrupt(20)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_20,100,1);IF(HasTemporaryHPInterrupt(19)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_19,100,1);IF(HasTemporaryHPInterrupt(18)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_18,100,1);IF(HasTemporaryHPInterrupt(17)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_17,100,1);IF(HasTemporaryHPInterrupt(16)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_16,100,1);IF(HasTemporaryHPInterrupt(15)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_15,100,1);IF(HasTemporaryHPInterrupt(14)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_14,100,1);IF(HasTemporaryHPInterrupt(13)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_13,100,1);IF(HasTemporaryHPInterrupt(12)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_12,100,1);IF(HasTemporaryHPInterrupt(11)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_11,100,1);IF(HasTemporaryHPInterrupt(10)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_10,100,1);IF(HasTemporaryHPInterrupt(9)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_9,100,1);IF(HasTemporaryHPInterrupt(8)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_8,100,1);IF(HasTemporaryHPInterrupt(7)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_7,100,1);IF(HasTemporaryHPInterrupt(6)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_6,100,1);IF(HasTemporaryHPInterrupt(5)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_5,100,1);IF(HasTemporaryHPInterrupt(4)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_4,100,1);IF(HasTemporaryHPInterrupt(3)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_3,100,1);IF(HasTemporaryHPInterrupt(2)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_2,100,1);IF(HasTemporaryHPInterrupt(1)):ApplyStatus(OBSERVER_TARGET,PROJECTED_WARD_1,100,1)"
data "Stack" "ProjectedWard"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_SneakAttack"
type "InterruptData"
data "DisplayName" "Sneak Attack"
data "Description" "Once per turn, you deal extra [1] when you attack with advantage or target someone with one of your allies nearby."
data "DescriptionParams" "DealDamage(LevelMapValue(SneakAttack),MainMeleeWeaponDamageType)"
data "Icon" "Action_SneakAttack_Melee"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and ((IsAttackType(AttackType.RangedWeaponAttack)) or (IsAttackType(AttackType.MeleeWeaponAttack) and WieldingWeapon('Finesse', false, false, context.Observer)) or (IsAttackType(AttackType.MeleeOffHandWeaponAttack) and WieldingWeapon('Finesse', true, false, context.Observer))) and (HasInterruptAdvantage() or HasStatus('SNEAK_ATTACK_INTERRUPT',context.Observer) or HasAllyWithinRange('SG_Incapacitated',3)) and not HasInterruptDisadvantage() and HasDamageEffectFlag(DamageFlags.Hit) and HasActionResource('SneakAttack',1,0,false,context.Observer) and not IsKillingBlow() and Self(context.Source,context.Observer)"
data "Properties" "IF(IsAttackType(AttackType.MeleeWeaponAttack) and not ConditionResult(context.Observer.Level > 16)):DealDamage(LevelMapValue(SneakAttack), MainMeleeWeaponDamageType);IF(IsAttackType(AttackType.RangedWeaponAttack) and not ConditionResult(context.Observer.Level > 16)):DealDamage(LevelMapValue(SneakAttack), MainRangedWeaponDamageType);IF(IsAttackType(AttackType.MeleeOffHandWeaponAttack) and not ConditionResult(context.Observer.Level > 16)):DealDamage(LevelMapValue(SneakAttack), OffhandMeleeWeaponDamageType);IF(IsAttackType(AttackType.RangedOffHandWeaponAttack) and not ConditionResult(context.Observer.Level > 16)):DealDamage(LevelMapValue(SneakAttack), OffhandRangedWeaponDamageType);IF(IsAttackType(AttackType.MeleeWeaponAttack) and ConditionResult(context.Observer.Level > 16) and not ConditionResult(context.Observer.Level > 18)):DealDamage(9d6, MainMeleeWeaponDamageType);IF(IsAttackType(AttackType.RangedWeaponAttack) and ConditionResult(context.Observer.Level > 16) and not ConditionResult(context.Observer.Level > 18)):DealDamage(9d6, MainRangedWeaponDamageType);IF(IsAttackType(AttackType.MeleeOffHandWeaponAttack) and ConditionResult(context.Observer.Level > 16) and not ConditionResult(context.Observer.Level > 18)):DealDamage(9d6, OffhandMeleeWeaponDamageType);IF(IsAttackType(AttackType.RangedOffHandWeaponAttack) and ConditionResult(context.Observer.Level > 16) and not ConditionResult(context.Observer.Level > 18)):DealDamage(9d6, OffhandRangedWeaponDamageType);IF(IsAttackType(AttackType.MeleeWeaponAttack) and ConditionResult(context.Observer.Level > 18)):DealDamage(10d6, MainMeleeWeaponDamageType);IF(IsAttackType(AttackType.RangedWeaponAttack) and ConditionResult(context.Observer.Level > 18)):DealDamage(10d6, MainRangedWeaponDamageType);IF(IsAttackType(AttackType.MeleeOffHandWeaponAttack) and ConditionResult(context.Observer.Level > 18)):DealDamage(10d6, OffhandMeleeWeaponDamageType);IF(IsAttackType(AttackType.RangedOffHandWeaponAttack) and ConditionResult(context.Observer.Level > 18)):DealDamage(10d6, OffhandRangedWeaponDamageType)"
data "Cost" "SneakAttack:1"
data "Stack" "SneakAttack"
data "InterruptDefaultValue" "Enabled"

new entry "Interrupt_SneakAttack_7"
type "InterruptData"
using "Interrupt_SneakAttack"
data "DescriptionParams" "DealDamage(7d6,MainMeleeWeaponDamageType)"

new entry "Interrupt_SneakAttack_8"
type "InterruptData"
using "Interrupt_SneakAttack"
data "DescriptionParams" "DealDamage(8d6,MainMeleeWeaponDamageType)"

new entry "Interrupt_SneakAttack_9"
type "InterruptData"
using "Interrupt_SneakAttack"
data "DescriptionParams" "DealDamage(9d6,MainMeleeWeaponDamageType)"

new entry "Interrupt_SneakAttack_10"
type "InterruptData"
using "Interrupt_SneakAttack"
data "DescriptionParams" "DealDamage(10d6,MainMeleeWeaponDamageType)"

new entry "Interrupt_DistractingStrike"
type "InterruptData"
data "DisplayName" "Distracting Strike"
data "Description" "Spend a superiority die to make an attack that distracts the target, causing an ally's next attack against the target to have Advantage."
data "Icon" "Action_DistractingStrike"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and Self(context.Source,context.Observer) and IsWeaponAttack() and HasDamageEffectFlag(DamageFlags.Hit) and not IsKillingBlow() and not HasStatus('FEINT_ATTACK_TECHNICAL',context.Observer) and not HasStatus('PRECISION_ATTACK_TECHNICAL_2',context.Observer)"
data "Properties" "ApplyStatus(DISTRACTED,100,1)"
data "Cost" "SuperiorityDie:1"
data "Stack" "Maneuver"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_DistractingStrike_Critical"
type "InterruptData"
using "Interrupt_DistractingStrike"
data "DisplayName" "Distracting Attack: Critical"
data "ExtraDescription" "This maneuver only triggers when you land a Critical Hit."
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and Self(context.Source,context.Observer) and IsWeaponAttack() and HasDamageEffectFlag(DamageFlags.Hit) and IsCritical() and not IsKillingBlow() and not HasStatus('FEINT_ATTACK_TECHNICAL',context.Observer) and not HasStatus('PRECISION_ATTACK_TECHNICAL_2',context.Observer)"

new entry "Interrupt_GoadingAttack"
type "InterruptData"
using "Interrupt_DistractingStrike"
data "DisplayName" "Goading Attack"
data "Description" "Spend a superiority die to make an attack that deals an additional [1] and possibly forces the target to have Disadvantage on Attack Rolls against all creatures except you."
data "Icon" "Action_GoadingAttack"
data "Properties" "ApplyStatus(OBSERVER_TARGET,GOADING_ATTACK_PROC,100,1)"

new entry "Interrupt_GoadingAttack_Critical"
type "InterruptData"
using "Interrupt_GoadingAttack"
data "DisplayName" "Goading Attack: Critical"
data "ExtraDescription" "This maneuver only triggers when you land a Critical Hit."
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and Self(context.Source,context.Observer) and IsWeaponAttack() and HasDamageEffectFlag(DamageFlags.Hit) and IsCritical() and not IsKillingBlow() and not HasStatus('FEINT_ATTACK_TECHNICAL',context.Observer) and not HasStatus('PRECISION_ATTACK_TECHNICAL_2',context.Observer)"

new entry "Interrupt_PrecisionAttack"
type "InterruptData"
data "DisplayName" "Precision Attack"
data "Description" "Spend a superiority die to add [1] to a weapon Attack Roll you make."
data "DescriptionParams" "LevelMapValue(SuperiorityDie)"
data "Icon" "Action_PrecisionAttack"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "not Dead(context.Observer) and HasInterruptedAttack() and HasStringInSpellRoll('WeaponAttack') and Self(context.Source,context.Observer) and not HasStatus('FEINT_ATTACK_TECHNICAL',context.Observer)"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,PRECISION_ATTACK_TECHNICAL,100,1);AdjustRoll(OBSERVER_OBSERVER,LevelMapValue(SuperiorityDie))"
data "Cost" "SuperiorityDie:1"
data "Stack" "Maneuver"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_Parry"
type "InterruptData"
data "DisplayName" "Parry"
data "Description" "When another creature damages you with a melee attack, you can use your reaction and expend one superiority die to reduce the damage by the number you roll on your superiority die + [1]."
data "DescriptionParams" "DexterityModifier"
data "Icon" "Action_Parry"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and not Self(context.Source, context.Observer) and HasFunctor(StatsFunctorType.DealDamage) and SpellTypeIs(SpellType.Target) and HasSpellFlag(SpellFlags.Melee)"
data "Properties" "IF(ConditionResult(context.Observer.Level < 10)):ApplyStatus(OBSERVER_OBSERVER,PARRY,100,1);IF(ConditionResult(context.Observer.Level > 9) and ConditionResult(context.Observer.Level < 18)):ApplyStatus(OBSERVER_OBSERVER,PARRY_2,100,1);IF(ConditionResult(context.Observer.Level > 17)):ApplyStatus(OBSERVER_OBSERVER,PARRY_3,100,1)"
data "Stack" "Maneuver"
data "Cost" "ReactionActionPoint:1;SuperiorityDie:1"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_Smite_Divine"
type "InterruptData"
data "DisplayName" "Shared_Interrupt_Interrupt_Smite_Divine_DisplayName"
data "Description" "Shared_Interrupt_Interrupt_Smite_Divine_Description"
data "DescriptionParams" "DealDamage(2d8,Radiant);"
data "ExtraDescription" "Shared_Interrupt_Interrupt_Smite_Divine_ExtraDescription"
data "ExtraDescriptionParams" "DealDamage(1d8,Radiant)"
data "Icon" "Action_Paladin_DivineSmite"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and IsMeleeAttack() and not IsDivineSmite() and Self(context.Source,context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and IsWeaponAttack() and not IsCritical() and not IsKillingBlow()"
data "Properties" "IF(not UndeadOrFiend(context.Target)):DealDamage(2d8,Radiant);IF(UndeadOrFiend(context.Target)):DealDamage(3d8,Radiant);ApplyStatus(INTERRUPT_SMITE_DIVINE_VFX,100,0)"
data "Cost" "SpellSlot:1:1:1"
data "Stack" "DivineSmite"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_Smite_Divine_2"
type "InterruptData"
using "Interrupt_Smite_Divine"
data "DescriptionParams" "DealDamage(3d8,Radiant);"
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and IsMeleeAttack() and not IsDivineSmite() and Self(context.Source,context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and IsWeaponAttack() and not IsCritical() and not IsKillingBlow()"
data "Properties" "IF(not UndeadOrFiend(context.Target)):DealDamage(3d8,Radiant);IF(UndeadOrFiend(context.Target)):DealDamage(4d8,Radiant);ApplyStatus(INTERRUPT_SMITE_DIVINE_VFX,100,0)"
data "Cost" "SpellSlot:1:1:2"

new entry "Interrupt_Smite_Divine_3"
type "InterruptData"
using "Interrupt_Smite_Divine"
data "DescriptionParams" "DealDamage(4d8,Radiant);"
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and IsMeleeAttack() and not IsDivineSmite() and Self(context.Source,context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and IsWeaponAttack() and not IsCritical() and not IsKillingBlow()"
data "Properties" "IF(not UndeadOrFiend(context.Target)):DealDamage(4d8,Radiant);IF(UndeadOrFiend(context.Target)):DealDamage(5d8,Radiant);ApplyStatus(INTERRUPT_SMITE_DIVINE_VFX,100,0)"
data "Cost" "SpellSlot:1:1:3"

new entry "Interrupt_Smite_Divine_4"
type "InterruptData"
using "Interrupt_Smite_Divine"
data "DescriptionParams" "DealDamage(5d8,Radiant);"
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and IsMeleeAttack() and not IsDivineSmite() and Self(context.Source,context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and IsWeaponAttack() and not IsCritical() and not IsKillingBlow()"
data "Properties" "IF(not UndeadOrFiend(context.Target)):DealDamage(5d8,Radiant);IF(UndeadOrFiend(context.Target)):DealDamage(6d8,Radiant);ApplyStatus(INTERRUPT_SMITE_DIVINE_VFX,100,0)"
data "Cost" "SpellSlot:1:1:4"

new entry "Interrupt_Smite_Divine_5"
type "InterruptData"
using "Interrupt_Smite_Divine"
data "DescriptionParams" "DealDamage(6d8,Radiant);"
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and IsMeleeAttack() and not IsDivineSmite() and Self(context.Source,context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and IsWeaponAttack() and not IsCritical() and not IsKillingBlow()"
data "Properties" "IF(not UndeadOrFiend(context.Target)):DealDamage(6d8,Radiant);IF(UndeadOrFiend(context.Target)):DealDamage(7d8,Radiant);ApplyStatus(INTERRUPT_SMITE_DIVINE_VFX,100,0)"
data "Cost" "SpellSlot:1:1:5"

new entry "Interrupt_Smite_Divine_Critical"
type "InterruptData"
using "Interrupt_Smite_Divine"
data "DisplayName" "Shared_Interrupt_Interrupt_Smite_Divine_Critical_DisplayName"
data "ExtraDescription" "Shared_Interrupt_Interrupt_Smite_Divine_Critical_ExtraDescription"
data "Icon" "Action_Paladin_DivineSmite"
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and IsMeleeAttack() and not IsDivineSmite() and Self(context.Source,context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and IsWeaponAttack() and IsCritical() and not IsKillingBlow()"
data "Cost" "SpellSlot:1:1:1"

new entry "Interrupt_Smite_Divine_Critical_2"
type "InterruptData"
using "Interrupt_Smite_Divine_Critical"
data "DescriptionParams" "DealDamage(3d8,Radiant);"
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and IsMeleeAttack() and not IsDivineSmite() and Self(context.Source,context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and IsWeaponAttack() and IsCritical() and not IsKillingBlow()"
data "Properties" "IF(not UndeadOrFiend(context.Target)):DealDamage(3d8,Radiant);IF(UndeadOrFiend(context.Target)):DealDamage(4d8,Radiant);ApplyStatus(INTERRUPT_SMITE_DIVINE_VFX,100,0)"
data "Cost" "SpellSlot:1:1:2"

new entry "Interrupt_Smite_Divine_Critical_3"
type "InterruptData"
using "Interrupt_Smite_Divine_Critical"
data "DescriptionParams" "DealDamage(4d8,Radiant);"
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and IsMeleeAttack() and not IsDivineSmite() and Self(context.Source,context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and IsWeaponAttack() and IsCritical() and not IsKillingBlow()"
data "Properties" "IF(not UndeadOrFiend(context.Target)):DealDamage(4d8,Radiant);IF(UndeadOrFiend(context.Target)):DealDamage(5d8,Radiant);ApplyStatus(INTERRUPT_SMITE_DIVINE_VFX,100,0)"
data "Cost" "SpellSlot:1:1:3"

new entry "Interrupt_Smite_Divine_Critical_4"
type "InterruptData"
using "Interrupt_Smite_Divine_Critical"
data "DescriptionParams" "DealDamage(5d8,Radiant);"
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and IsMeleeAttack() and not IsDivineSmite() and Self(context.Source,context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and IsWeaponAttack() and IsCritical() and not IsKillingBlow()"
data "Properties" "IF(not UndeadOrFiend(context.Target)):DealDamage(5d8,Radiant);IF(UndeadOrFiend(context.Target)):DealDamage(6d8,Radiant);ApplyStatus(INTERRUPT_SMITE_DIVINE_VFX,100,0)"
data "Cost" "SpellSlot:1:1:4"

new entry "Interrupt_Smite_Divine_Critical_5"
type "InterruptData"
using "Interrupt_Smite_Divine_Critical"
data "DescriptionParams" "DealDamage(6d8,Radiant);"
data "Conditions" "IsAbleToReact(context.Observer) and not Item() and IsMeleeAttack() and not IsDivineSmite() and Self(context.Source,context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and IsWeaponAttack() and IsCritical() and not IsKillingBlow()"
data "Properties" "IF(not UndeadOrFiend(context.Target)):DealDamage(6d8,Radiant);IF(UndeadOrFiend(context.Target)):DealDamage(7d8,Radiant);ApplyStatus(INTERRUPT_SMITE_DIVINE_VFX,100,0)"
data "Cost" "SpellSlot:1:1:5"

new entry "Interrupt_InvestmentOfTheChainMaster"
type "InterruptData"
data "DisplayName" "Investment of the Chain Master"
data "Description" "Grant your familiar resistance against any damage dealt to it."
data "Icon" "Action_InvestmentOfTheChainMaster"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Nearby"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and HasFunctor(StatsFunctorType.DealDamage) and HasStatus('INVESTMENT_OF_THE_CHAIN_MASTER',context.Target)"
data "Properties" "ApplyStatus(OBSERVER_TARGET,INVESTMENT_OF_THE_CHAIN_MASTER_RESISTANCE,100,1)"
data "Stack" "InvestmentOfTheChainMaster"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_BardicInspiration_Attack"
type "InterruptData"
data "DisplayName" "Shared_Interrupt_Interrupt_BardicInspiration_Attack_DisplayName"
data "Description" "Shared_Interrupt_Interrupt_BardicInspiration_Attack_Description"
data "DescriptionParams" "LevelMapValue(BardicInspiration)"
data "ExtraDescription" "Shared_Interrupt_Interrupt_BardicInspiration_Attack_ExtraDescription"
data "Icon" "PassiveFeature_BardicInspiration_Attack"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "not Dead(context.Observer) and HasInterruptedAttack() and Self(context.Observer,context.Source)"
data "Properties" "AdjustRoll(OBSERVER_OBSERVER,ResourceRoll(BardicInspiration,1));RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D8);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D10);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D12);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_ATTACK,100,0)"
data "Cost" "BardicInspiration:1"
data "Stack" "BardicInspiration"
data "InterruptDefaultValue" "Enabled;Ask"

new entry "Interrupt_BardicInspiration_SavingThrow"
type "InterruptData"
using "Interrupt_BardicInspiration_Attack"
data "DisplayName" "Shared_Interrupt_Interrupt_BardicInspiration_SavingThrow_DisplayName"
data "Description" "Shared_Interrupt_Interrupt_BardicInspiration_SavingThrow_Description"
data "Icon" "PassiveFeature_BardicInspiration_Defense"
data "InterruptContext" "OnPostRoll"
data "Conditions" "not Dead(context.Observer) and HasInterruptedSavingThrow() and Self(context.Observer,context.Target)"
data "Properties" "AdjustRoll(OBSERVER_OBSERVER,ResourceRoll(BardicInspiration,1));RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D8);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D10);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_D12);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_SAVINGTHROW,100,0)"

new entry "Interrupt_CombatInspiration_Attack"
type "InterruptData"
using "Interrupt_BardicInspiration_Attack"
data "DisplayName" "Shared_Interrupt_Interrupt_CombatInspiration_Attack_DisplayName"
data "Description" "Shared_Interrupt_Interrupt_CombatInspiration_Attack_Description"
data "DescriptionParams" "LevelMapValue(BardicInspiration)"
data "ExtraDescription" "Shared_Interrupt_Interrupt_CombatInspiration_Attack_ExtraDescription"
data "InterruptContext" "OnPostRoll"
data "Properties" "AdjustRoll(OBSERVER_OBSERVER,ResourceRoll(BardicInspiration,1));RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D8);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D10);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D12);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_ATTACK,100,0)"

new entry "Interrupt_CombatInspiration_SavingThrow_ArmorClass"
type "InterruptData"
using "Interrupt_CombatInspiration_Attack"
data "DisplayName" "Shared_Interrupt_Interrupt_CombatInspiration_SavingThrow_ArmorClass_DisplayName"
data "Description" "Shared_Interrupt_Interrupt_CombatInspiration_SavingThrow_ArmorClass_Description"
data "Icon" "PassiveFeature_BardicInspiration_Defense"
data "InterruptContext" "OnPostRoll"
data "Conditions" "not Dead(context.Observer) and (HasInterruptedAttack() or HasInterruptedSavingThrow()) and Self(context.Observer,context.Target)"
data "Properties" "IF(HasInterruptedSavingThrow()):AdjustRoll(OBSERVER_OBSERVER,ResourceRoll(BardicInspiration,1));IF(HasInterruptedAttack()):AdjustRoll(OBSERVER_OBSERVER,0-ResourceRoll(BardicInspiration,1));RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D8);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D10);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D12);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_DEFENSE,100,0)"

new entry "Interrupt_CombatInspiration_Damage"
type "InterruptData"
using "Interrupt_CombatInspiration_Attack"
data "DisplayName" "Shared_Interrupt_Interrupt_CombatInspiration_Damage_DisplayName"
data "Description" "Shared_Interrupt_Interrupt_CombatInspiration_Damage_Description"
data "Icon" "PassiveFeature_BardicInspiration_Damage"
data "InterruptContext" "OnCastHit"
data "Conditions" "not Dead(context.Observer) and Character() and IsWeaponAttack() and Self(context.Source,context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and not IsKillingBlow()"
data "Properties" "IF(IsMeleeAttack()):DealDamage(ResourceRoll(BardicInspiration,1), MainMeleeWeaponDamageType);IF(IsRangedAttack()):DealDamage(ResourceRoll(BardicInspiration,1), MainRangedWeaponDamageType);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D8);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D10);RemoveStatus(OBSERVER_OBSERVER,BARDIC_INSPIRATION_COMBAT_D12);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_BARDIC_INSPIRATION_COMBAT_DAMAGE,100,0)"

new entry "Interrupt_CuttingWords"
type "InterruptData"
data "DisplayName" "Shared_Interrupt_Interrupt_CuttingWords_DisplayName"
data "Description" "Shared_Interrupt_Interrupt_CuttingWords_Description"
data "ExtraDescription" "Shared_Interrupt_Interrupt_CuttingWords_ExtraDescription"
data "ExtraDescriptionParams" "LevelMapValue(BardicInspiration)"
data "Icon" "PassiveFeature_CuttingWords"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Nearby"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and (HasInterruptedAttack() and Enemy(context.Source,context.Observer)) or (HasInterruptedSavingThrow() and Enemy(context.Target,context.Observer))"
data "Properties" "AdjustRoll(OBSERVER_OBSERVER,0-ResourceRoll(BardicInspiration,1));ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_CUTTING_WORDS,100,0)"
data "Cost" "ReactionActionPoint:1;BardicInspiration:1"
data "InterruptDefaultValue" "Enabled;Ask"

new entry "Interrupt_DefensiveDuelist"
type "InterruptData"
data "DisplayName" "Shared_Interrupt_Interrupt_DefensiveDuelist_DisplayName"
data "Description" "Shared_Interrupt_Interrupt_DefensiveDuelist_Description"
data "DescriptionParams" "ProficiencyBonus"
data "Icon" "PassiveFeature_DefensiveDualist"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and HasInterruptedAttack() and Self(context.Target,context.Observer)"
data "Properties" "AdjustRoll(OBSERVER_OBSERVER,0-ProficiencyBonus);ApplyStatus(SWAP,PASSIVE_DEFENSIVE_DUELIST,100,0);ApplyStatus(OBSERVER_OBSERVER,INTERRUPT_DEFENSIVE_DUELIST,100,0)"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Enabled;Ask"

new entry "Interrupt_UndyingSentinel"
type "InterruptData"
data "DisplayName" "Undying Sentinel"
data "Description" "When you are reduced to [1] and are not killed outright, you can choose to drop to [2] instead."
data "DescriptionParams" "RegainHitPoints(0);RegainHitPoints(1)"
data "Icon" "PassiveFeature_UndyingSentinel"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "ConditionResult(context.Observer.HP < 1)"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,UNDYING_SENTINEL,100,0)"
data "Cost" "UndyingSentinel:1"
data "InterruptDefaultValue" "Enabled;Ask"
data "Stack" "UndyingSentinel"

new entry "Interrupt_SpellThief"
type "InterruptData"
data "DisplayName" "Spell Thief"
data "Description" "Interrupt a creature in the process of casting a spell."
data "Icon" "Action_SpellThief"
data "InterruptContext" "OnSpellCast"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "not HasSpellCastBlocked(context.Observer) and IsAbleToReact(context.Observer) and not Self(context.Source, context.Observer) and (IsSpell() or SpellThiefMagicMissile()"
data "Properties" "IF(SpellThiefArmsOfHadar()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_ARMS_OF_HADAR,100,-1);IF(SpellThiefBane()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_BANE,100,-1);IF(SpellThiefBurningHands()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_BURNING_HANDS,100,-1);IF(SpellThiefCharmPerson()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_CHARM_PERSON,100,-1);IF(SpellThiefChromaticOrb()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_CHROMATIC_ORB,100,-1);IF(SpellThiefCompelledDuel()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_COMPELLED_DUEL,100,-1);IF(SpellThiefColorSpray()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_COLOR_SPRAY,100,-1);IF(SpellThiefCommand()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_COMMAND,100,-1);IF(SpellThiefDissonantWhispers()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_DISSONANT_WHISPERS,100,-1);IF(SpellThiefEnsnaringStrike()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_ENSNARING_STRIKE,100,-1);IF(SpellThiefFaerieFire()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_FAERIE_FIRE,100,-1);IF(SpellThiefFogCloud()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_FOG_CLOUD,100,-1);IF(SpellThiefGrease()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_GREASE,100,-1);IF(SpellThiefHellishRebuke()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_HELLISH_REBUKE,100,-1);IF(SpellThiefHex()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_HEX,100,-1);IF(SpellThiefHideousLaughter()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_HIDEOUS_LAUGHTER,100,-1);IF(SpellThiefHuntersMark()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_HUNTERS_MARK,100,-1);IF(SpellThiefInflictWounds()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_INFLICT_WOUNDS,100,-1);IF(SpellThiefMagicMissile()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_MAGIC_MISSILE,100,-1);IF(SpellThiefRayOfSickness()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_RAY_OF_SICKNESS,100,-1);IF(SpellThiefSleep()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_SLEEP,100,-1);IF(SpellThiefWitchBolt()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_WITCH_BOLT,100,-1);IF(SpellThiefAcidArrow()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_ACID_ARROW,100,-1);IF(SpellThiefBlindess()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_BLINDNESS,100,-1);IF(SpellThiefCloudOfDaggers()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_CLOUD_OF_DAGGERS,100,-1);IF(SpellThiefCrownOfMadness()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_CROWN_OF_MADNESS,100,-1);IF(SpellThiefDarkness()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_DARKNESS,100,-1);IF(SpellThiefReduce()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_REDUCE,100,-1);IF(SpellThiefHeatMetal()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_HEAT_METAL,100,-1);IF(SpellThiefHoldPerson()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_HOLD_PERSON,100,-1);IF(SpellThiefPhantasmalForce()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_PHANTASMAL_FORCE,100,-1);IF(SpellThiefRayOfEnfeeblement()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_RAY_OF_ENFEEBLEMENT,100,-1);IF(SpellThiefScorchingRay()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_SCORCHING_RAY,100,-1);IF(SpellThiefWeb()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_WEB,100,-1);IF(SpellThiefBestowCurse()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_BESTOW_CURSE,100,-1);IF(SpellThiefCounterspell()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_COUNTERSPELL,100,-1);IF(SpellThiefFireball()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_FIREBALL,100,-1);IF(SpellThiefHypnoticPattern()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_HYPNOTIC_PATTERN,100,-1);IF(SpellThiefSleetStorm()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_SLEET_STORM,100,-1);IF(SpellThiefStinkingCloud()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_STINKING_CLOUD,100,-1);Counterspell();UseSpell(OBSERVER_SOURCE,Target_SpellThief,true,true,true)"
data "Cost" "ReactionActionPoint:1;SpellThiefPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"
data "Stack" "SpellThief"

new entry "Interrupt_SpellThief_2"
type "InterruptData"
using "Interrupt_SpellThief"
data "DisplayName" "Spell Thief: Area of Effect"
data "Description" "Interrupt a creature in the process of casting an area of effect spell."
data "InterruptContextScope" "Nearby"
data "Container" "YesNoDecision"
data "Conditions" "not HasSpellCastBlocked(context.Observer) and IsAbleToReact(context.Observer) and not Self(context.Source, context.Observer) and IsSpell() and (SpellTypeIs(SpellType.Zone) or AreaRadiusGreaterThan(0) or SpellThiefScorchingRay() or SpellThiefRayOfEnfeeblement())"
data "Properties" "IF(SpellThiefArmsOfHadar()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_ARMS_OF_HADAR,100,-1);IF(SpellThiefBurningHands()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_BURNING_HANDS,100,-1);IF(SpellThiefColorSpray()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_COLOR_SPRAY,100,-1);IF(SpellThiefFaerieFire()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_FAERIE_FIRE,100,-1);IF(SpellThiefSleep()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_SLEEP,100,-1);IF(SpellThiefThunderwave()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_THUNDERWAVE,100,-1);IF(SpellThiefAganazzarsScorcher()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_AGANAZZARS_SCORCHER,100,-1);IF(SpellThiefCloudOfDaggers()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_CLOUD_OF_DAGGERS,100,-1);IF(SpellThiefDarkness()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_DARKNESS,100,-1);IF(SpellThiefGustOfWind()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_GUST_OF_WIND,100,-1);IF(SpellThiefScorchingRay()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_SCORCHING_RAY,100,-1);IF(SpellThiefShatter()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_SHATTER,100,-1);IF(SpellThiefWeb()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_WEB,100,-1);IF(SpellThiefFear()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_FEAR,100,-1);IF(SpellThiefFireball()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_FIREBALL,100,-1);IF(SpellThiefHypnoticPattern()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_HYPNOTIC_PATTERN,100,-1);IF(SpellThiefSleetStorm()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_SLEET_STORM,100,-1);IF(SpellThiefStinkingCloud()):ApplyStatus(OBSERVER_OBSERVER,SPELL_THIEF_STINKING_CLOUD,100,-1);Counterspell();UseSpell(OBSERVER_SOURCE,Target_SpellThief,true,true,true)"

new entry "Interrupt_StrokeOfLuck"
type "InterruptData"
data "DisplayName" "Stroke of Luck"
data "Description" "When you make an attack, you can make it automatically succeed regardless of the result."
data "Icon" "PassiveFeature_StrokeOfLuck"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "not Dead(context.Observer) and HasInterruptedAttack() and Self(context.Observer,context.Source)"
data "Properties" "AdjustRoll(OBSERVER_OBSERVER,100)"
data "Cost" "StrokeOfLuck:1"
data "Stack" "StrokeOfLuck"
data "InterruptDefaultValue" "Enabled;Ask"

new entry "Interrupt_Retaliation"
type "InterruptData"
data "DisplayName" "Retailiation"
data "Description" "When you take damage from a creature within [1] of you, you can retaliate with a melee weapon attack."
data "DescriptionParams" "Distance(1.5)"
data "Icon" "PassiveFeature_Barbarian_Retaliation"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and HasDamageEffectFlag(DamageFlags.Hit) and HasStatus('RETALIATION',context.Source) and HasFunctor(StatsFunctorType.DealDamage)"
data "Properties" "UseAttack(SWAP)"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_TotemicAttunement_Wolf"
type "InterruptData"
data "DisplayName" "Totemic Attunement: Wolf"
data "Description" "When you hit a creature with a melee weapon attack, you can knock a creature prone."
data "Icon" "Action_Barbarian_Rage_WolfTotem"
data "InterruptContext" "OnCastHit"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and Character() and Self(context.Source,context.Observer) and IsWeaponAttack() and IsMeleeAttack() and HasDamageEffectFlag(DamageFlags.Hit) and not IsKillingBlow() and HasStatus('SG_Rage',context.Observer)"
data "Properties" "ApplyStatus(OBSERVER_TARGET,TOTEMIC_ATTUNEMENT_WOLF,100,1)"
data "Cost" "BonusActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_ArmorOfHexes"
type "InterruptData"
data "DisplayName" "Armor of Hexes"
data "Description" "ArmorOfHexes_Interrupt_Description"
data "Icon" "PassiveFeature_ArmorOfHexes"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and HasFunctor(StatsFunctorType.DealDamage) and (HasStatus('HEXBLADES_CURSE',context.Source,context.Observer) or HasStatus('MASTER_OF_HEXES',context.Source,context.Observer))"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,ARMOR_OF_HEXES,100,0)"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_SongOfDefense"
type "InterruptData"
data "DisplayName" "b20e04c9-647b-48ab-99b6-5fa0fbd957ea;1"
data "Description" "8d39dadd-360e-4469-a642-e8ae8973abd0;1"
data "DescriptionParams" "1;5"
data "Icon" "PassiveFeature_SongOfDefense"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and HasFunctor(StatsFunctorType.DealDamage) and not Self(context.Source,context.Observer) and HasStatus('BLADESONG',context.Observer)"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE,100,1)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:1"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_SongOfDefense_2"
type "InterruptData"
using "Interrupt_SongOfDefense"
data "DescriptionParams" "2;10"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE_2,100,1)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:2"

new entry "Interrupt_SongOfDefense_3"
type "InterruptData"
using "Interrupt_SongOfDefense"
data "DescriptionParams" "3;15"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE_3,100,1)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:3"

new entry "Interrupt_SongOfDefense_4"
type "InterruptData"
using "Interrupt_SongOfDefense"
data "DescriptionParams" "4;20"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE_4,100,1)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:4"

new entry "Interrupt_SongOfDefense_5"
type "InterruptData"
using "Interrupt_SongOfDefense"
data "DescriptionParams" "5;25"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE_5,100,1)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:5"

new entry "Interrupt_SongOfDefense_6"
type "InterruptData"
using "Interrupt_SongOfDefense"
data "DescriptionParams" "6;30"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE_6,100,1)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:6"

new entry "Interrupt_SongOfDefense_7"
type "InterruptData"
using "Interrupt_SongOfDefense"
data "DescriptionParams" "7;35"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE_7,100,1)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:7"

new entry "Interrupt_SongOfDefense_8"
type "InterruptData"
using "Interrupt_SongOfDefense"
data "DescriptionParams" "8;40"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE_8,100,1)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:8"

new entry "Interrupt_SongOfDefense_9"
type "InterruptData"
using "Interrupt_SongOfDefense"
data "DescriptionParams" "9;45"
data "Properties" "ApplyStatus(OBSERVER_OBSERVER,SONG_OF_DEFENSE_9,100,1)"
data "Cost" "ReactionActionPoint:1;SpellSlotsGroup:1:1:9"

new entry "Interrupt_EmboldeningBond"
type "InterruptData"
data "DisplayName" "Emboldening Bond"
data "Description" "EmboldeningBond_Interrupt_Description"
data "DescriptionParams" "1d4"
data "Icon" "PassiveFeature_EmboldeningBond"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Self"
data "Container" "YesNoDecision"
data "Conditions" "not Dead(context.Observer) and ((Self(context.Source, context.Observer) and HasInterruptedAttack()) or (HasInterruptedSavingThrow() and Self(context.Observer,context.Target)))"
data "Properties" "AdjustRoll(OBSERVER_OBSERVER,1d4)"
data "Cost" "EmboldeningBond:1"
data "InterruptDefaultValue" "Ask;Enabled"

new entry "Interrupt_ProtectiveBond"
type "InterruptData"
data "DisplayName" "Protective Bond"
data "Description" "When another creature affected by the Emboldening Bond feature takes damage from an enemy, you can teleport to within [1] of them and take the damage instead."
data "DescriptionParams" "Distance(1.5)"
data "Icon" "PassiveFeature_ProtectiveBond"
data "InterruptContext" "OnPostRoll"
data "InterruptContextScope" "Nearby"
data "Container" "YesNoDecision"
data "Conditions" "IsAbleToReact(context.Observer) and HasFunctor(StatsFunctorType.DealDamage) and (HasStatus('PROTECTIVE_BOND',context.Target,context.Observer) or HasStatus('EXPANSIVE_BOND',context.Target,context.Observer)) and Enemy(context.Source,context.Observer)"
data "Properties" "ApplyStatus(OBSERVER_TARGET,PROTECTIVE_BOND_DAMAGE,100,1);IF(HasStatus('EXPANSIVE_BOND_AURA',context.Observer)):ApplyStatus(OBSERVER_TARGET,EXPANSIVE_BOND_RESISTANCE,100,1);UseSpell(OBSERVER_TARGET,Target_ProtectiveBond,true,true,true)"
data "Cost" "ReactionActionPoint:1"
data "InterruptDefaultValue" "Ask;Enabled"
data "Stack" "ProtectiveBond"